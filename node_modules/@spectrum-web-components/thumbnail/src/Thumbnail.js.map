{
  "version": 3,
  "sources": ["Thumbnail.ts"],
  "sourcesContent": ["/*\nCopyright 2020 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\n\nimport {\n    CSSResultArray,\n    html,\n    PropertyValues,\n    SpectrumElement,\n    TemplateResult,\n} from '@spectrum-web-components/base';\nimport { property } from '@spectrum-web-components/base/src/decorators.js';\nimport opacityCheckerboardStyles from '@spectrum-web-components/opacity-checkerboard/src/opacity-checkerboard.css.js';\n\nimport styles from './thumbnail.css.js';\n\nconst validSizes = [\n    '50',\n    '75',\n    '100',\n    '200',\n    '300',\n    '400',\n    '500',\n    '600',\n    '700',\n    '800',\n    '900',\n    '1000',\n];\nexport type ThumbnailSize = typeof validSizes[number];\n\nconst defaultSize = validSizes[6];\n\n/**\n * @element sp-thumbnail\n *\n * @slot image - image element to present in the Thumbnail\n */\n\nexport class Thumbnail extends SpectrumElement {\n    public static override get styles(): CSSResultArray {\n        return [opacityCheckerboardStyles, styles];\n    }\n\n    @property({ type: String, reflect: true })\n    public background?: string;\n\n    @property({ type: Boolean, reflect: true })\n    public cover = false;\n\n    @property({ type: Boolean, reflect: true })\n    public layer = false;\n\n    @property({ type: String, reflect: true })\n    public get size(): ThumbnailSize {\n        return this._size;\n    }\n\n    public set size(value: ThumbnailSize) {\n        const deprecatedSizes = ['xxs', 'xs', 's', 'm', 'l'];\n        type DeprecatedThumbnailSize = typeof deprecatedSizes[number];\n        const managedSizes: Record<DeprecatedThumbnailSize, ThumbnailSize> = {\n            xxs: '100',\n            xs: '300',\n            s: '500',\n            m: '700',\n            l: '900',\n        };\n        const usesDeprecatedSize = deprecatedSizes.includes(value);\n        if (usesDeprecatedSize) {\n            if (window.__swc.DEBUG) {\n                window.__swc.warn(\n                    this,\n                    `The \"size\" attribute/property for <${this.localName}> no longer supports the value \"${value}\". Use one of the following values, instead:`,\n                    'https://opensource.adobe.com/spectrum-web-components/components/thumbnail/#sizes',\n                    {\n                        level: 'deprecation',\n                        issues: validSizes as unknown as string[],\n                    }\n                );\n            }\n            value = managedSizes[value];\n        }\n        const size = (\n            validSizes.includes(value) ? value : defaultSize\n        ) as ThumbnailSize;\n        if (size) {\n            this.setAttribute('size', `${size}`);\n        }\n        if (this._size === size) {\n            return;\n        }\n        const oldSize = this._size;\n        this._size = size;\n        this.requestUpdate('size', oldSize);\n    }\n\n    private _size = defaultSize;\n\n    protected override update(changes: PropertyValues): void {\n        if (!this.hasAttribute('size')) {\n            this.setAttribute('size', this.size);\n        }\n        super.update(changes);\n    }\n\n    protected override render(): TemplateResult {\n        if (this.background) {\n            return html`\n                <div\n                    class=\"opacity-checkerboard background\"\n                    style=\"background: ${this.background}\"\n                >\n                    <div class=\"image-wrapper\">\n                        <slot></slot>\n                    </div>\n                </div>\n            `;\n        } else if (this.layer) {\n            return html`\n                <div class=\"opacity-checkerboard layer-inner\">\n                    <slot></slot>\n                </div>\n            `;\n        } else {\n            return html`\n                <div class=\"opacity-checkerboard image-wrapper\">\n                    <slot></slot>\n                </div>\n            `;\n        }\n    }\n}\n"],
  "mappings": "qNAYA,OAEI,QAAAA,EAEA,mBAAAC,MAEG,gCACP,OAAS,YAAAC,MAAgB,kDACzB,OAAOC,MAA+B,gFAEtC,OAAOC,MAAY,qBAEnB,MAAMC,EAAa,CACf,KACA,KACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACJ,EAGMC,EAAcD,EAAW,CAAC,EAQzB,aAAM,kBAAkBJ,CAAgB,CAAxC,kCASH,KAAO,MAAQ,GAGf,KAAO,MAAQ,GA8Cf,KAAQ,MAAQK,EAzDhB,WAA2B,QAAyB,CAChD,MAAO,CAACH,EAA2BC,CAAM,CAC7C,CAYA,IAAW,MAAsB,CAC7B,OAAO,KAAK,KAChB,CAEA,IAAW,KAAKG,EAAsB,CAClC,MAAMC,EAAkB,CAAC,MAAO,KAAM,IAAK,IAAK,GAAG,EAE7CC,EAA+D,CACjE,IAAK,MACL,GAAI,MACJ,EAAG,MACH,EAAG,MACH,EAAG,KACP,EAC2BD,EAAgB,SAASD,CAAK,IAarDA,EAAQE,EAAaF,CAAK,GAE9B,MAAMG,EACFL,EAAW,SAASE,CAAK,EAAIA,EAAQD,EAKzC,GAHII,GACA,KAAK,aAAa,OAAQ,GAAGA,CAAI,EAAE,EAEnC,KAAK,QAAUA,EACf,OAEJ,MAAMC,EAAU,KAAK,MACrB,KAAK,MAAQD,EACb,KAAK,cAAc,OAAQC,CAAO,CACtC,CAImB,OAAOC,EAA+B,CAChD,KAAK,aAAa,MAAM,GACzB,KAAK,aAAa,OAAQ,KAAK,IAAI,EAEvC,MAAM,OAAOA,CAAO,CACxB,CAEmB,QAAyB,CACxC,OAAI,KAAK,WACEZ;AAAA;AAAA;AAAA,yCAGsB,KAAK,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAOrC,KAAK,MACLA;AAAA;AAAA;AAAA;AAAA,cAMAA;AAAA;AAAA;AAAA;AAAA,aAMf,CACJ,CAvFWa,EAAA,CADNX,EAAS,CAAE,KAAM,OAAQ,QAAS,EAAK,CAAC,GALhC,UAMF,0BAGAW,EAAA,CADNX,EAAS,CAAE,KAAM,QAAS,QAAS,EAAK,CAAC,GARjC,UASF,qBAGAW,EAAA,CADNX,EAAS,CAAE,KAAM,QAAS,QAAS,EAAK,CAAC,GAXjC,UAYF,qBAGIW,EAAA,CADVX,EAAS,CAAE,KAAM,OAAQ,QAAS,EAAK,CAAC,GAdhC,UAeE",
  "names": ["html", "SpectrumElement", "property", "opacityCheckerboardStyles", "styles", "validSizes", "defaultSize", "value", "deprecatedSizes", "managedSizes", "size", "oldSize", "changes", "__decorateClass"]
}
