"use strict";var z=Object.defineProperty;var m=Object.getOwnPropertyDescriptor;var o=(c,r,e,i)=>{for(var t=i>1?void 0:i?m(r,e):r,a=c.length-1,s;a>=0;a--)(s=c[a])&&(t=(i?s(r,e,t):s(t))||t);return i&&t&&z(r,e,t),t};import{html as p,SpectrumElement as h}from"@spectrum-web-components/base";import{property as l}from"@spectrum-web-components/base/src/decorators.js";import b from"@spectrum-web-components/opacity-checkerboard/src/opacity-checkerboard.css.js";import y from"./thumbnail.css.js";const n=["50","75","100","200","300","400","500","600","700","800","900","1000"],u=n[6];export class Thumbnail extends h{constructor(){super(...arguments);this.cover=!1;this.layer=!1;this._size=u}static get styles(){return[b,y]}get size(){return this._size}set size(e){const i=["xxs","xs","s","m","l"],t={xxs:"100",xs:"300",s:"500",m:"700",l:"900"};i.includes(e)&&(e=t[e]);const s=n.includes(e)?e:u;if(s&&this.setAttribute("size",`${s}`),this._size===s)return;const d=this._size;this._size=s,this.requestUpdate("size",d)}update(e){this.hasAttribute("size")||this.setAttribute("size",this.size),super.update(e)}render(){return this.background?p`
                <div
                    class="opacity-checkerboard background"
                    style="background: ${this.background}"
                >
                    <div class="image-wrapper">
                        <slot></slot>
                    </div>
                </div>
            `:this.layer?p`
                <div class="opacity-checkerboard layer-inner">
                    <slot></slot>
                </div>
            `:p`
                <div class="opacity-checkerboard image-wrapper">
                    <slot></slot>
                </div>
            `}}o([l({type:String,reflect:!0})],Thumbnail.prototype,"background",2),o([l({type:Boolean,reflect:!0})],Thumbnail.prototype,"cover",2),o([l({type:Boolean,reflect:!0})],Thumbnail.prototype,"layer",2),o([l({type:String,reflect:!0})],Thumbnail.prototype,"size",1);
//# sourceMappingURL=Thumbnail.js.map
