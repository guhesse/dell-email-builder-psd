{
  "version": 3,
  "sources": ["popover.test.ts"],
  "sourcesContent": ["/*\nCopyright 2020 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\nimport '@spectrum-web-components/popover/sp-popover.js';\nimport { Popover } from '@spectrum-web-components/popover';\nimport { elementUpdated, expect, fixture, html } from '@open-wc/testing';\nimport { OverlayDisplayQueryDetail } from '@spectrum-web-components/overlay';\n\ndescribe('popover', () => {\n    let popover!: Popover;\n\n    beforeEach(async () => {\n        popover = await fixture<Popover>(\n            html`\n                <sp-popover variant=\"dialog\" placement=\"top\" open>\n                    <div id=\"title\">Popover Title</div>\n                    <div id=\"content\">\n                        Cupcake ipsum dolor sit amet jelly beans. Chocolate\n                        jelly caramels. Icing souffl\u00E9 chupa chups donut\n                        cheesecake. Jelly-o chocolate cake sweet roll cake\n                        danish candy biscuit halvah\n                    </div>\n                </sp-popover>\n            `\n        );\n        await elementUpdated(popover);\n    });\n\n    it('loads', async () => {\n        expect(popover).to.not.equal(undefined);\n        expect(popover.textContent).to.include('Popover Title');\n\n        await expect(popover).to.be.accessible();\n    });\n    it('tip exists only when tip attribute is true', async () => {\n        if (!popover.shadowRoot) throw new Error('No shadowRoot');\n        expect(popover.getAttribute('tip')).to.equal(null);\n\n        let tip = popover.shadowRoot.querySelector('tip') as HTMLElement;\n        expect(tip).to.equal(null);\n\n        popover.setAttribute('tip', 'true');\n\n        tip = popover.shadowRoot.querySelector('tip') as HTMLElement;\n        expect(tip).to.not.equal(undefined);\n    });\n\n    it('answers tip query', async () => {\n        const el = await fixture<Popover>(\n            html`\n                <sp-popover variant=\"dialog\" placement=\"top\" tip open>\n                    <div id=\"title\">Popover Title</div>\n                    <div id=\"content\">\n                        Cupcake ipsum dolor sit amet jelly beans. Chocolate\n                        jelly caramels. Icing souffl\u00E9 chupa chups donut\n                        cheesecake. Jelly-o chocolate cake sweet roll cake\n                        danish candy biscuit halvah\n                    </div>\n                </sp-popover>\n            `\n        );\n\n        await elementUpdated(el);\n\n        const overlayDetailQuery: OverlayDisplayQueryDetail = {};\n        const queryOverlayDetailEvent =\n            new CustomEvent<OverlayDisplayQueryDetail>('sp-overlay-query', {\n                bubbles: true,\n                composed: true,\n                detail: overlayDetailQuery,\n                cancelable: true,\n            });\n        el.dispatchEvent(queryOverlayDetailEvent);\n\n        expect(overlayDetailQuery.overlayContentTipElement).to.exist;\n        if (overlayDetailQuery.overlayContentTipElement) {\n            expect(overlayDetailQuery.overlayContentTipElement.id).to.equal(\n                'tip'\n            );\n        }\n    });\n});\n"],
  "mappings": ";AAWA,OAAO;AAEP,SAAS,gBAAgB,QAAQ,SAAS,YAAY;AAGtD,SAAS,WAAW,MAAM;AACtB,MAAI;AAEJ,aAAW,YAAY;AACnB,cAAU,MAAM;AAAA,MACZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAWJ;AACA,UAAM,eAAe,OAAO;AAAA,EAChC,CAAC;AAED,KAAG,SAAS,YAAY;AACpB,WAAO,OAAO,EAAE,GAAG,IAAI,MAAM,MAAS;AACtC,WAAO,QAAQ,WAAW,EAAE,GAAG,QAAQ,eAAe;AAEtD,UAAM,OAAO,OAAO,EAAE,GAAG,GAAG,WAAW;AAAA,EAC3C,CAAC;AACD,KAAG,8CAA8C,YAAY;AACzD,QAAI,CAAC,QAAQ;AAAY,YAAM,IAAI,MAAM,eAAe;AACxD,WAAO,QAAQ,aAAa,KAAK,CAAC,EAAE,GAAG,MAAM,IAAI;AAEjD,QAAI,MAAM,QAAQ,WAAW,cAAc,KAAK;AAChD,WAAO,GAAG,EAAE,GAAG,MAAM,IAAI;AAEzB,YAAQ,aAAa,OAAO,MAAM;AAElC,UAAM,QAAQ,WAAW,cAAc,KAAK;AAC5C,WAAO,GAAG,EAAE,GAAG,IAAI,MAAM,MAAS;AAAA,EACtC,CAAC;AAED,KAAG,qBAAqB,YAAY;AAChC,UAAM,KAAK,MAAM;AAAA,MACb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAWJ;AAEA,UAAM,eAAe,EAAE;AAEvB,UAAM,qBAAgD,CAAC;AACvD,UAAM,0BACF,IAAI,YAAuC,oBAAoB;AAAA,MAC3D,SAAS;AAAA,MACT,UAAU;AAAA,MACV,QAAQ;AAAA,MACR,YAAY;AAAA,IAChB,CAAC;AACL,OAAG,cAAc,uBAAuB;AAExC,WAAO,mBAAmB,wBAAwB,EAAE,GAAG;AACvD,QAAI,mBAAmB,0BAA0B;AAC7C,aAAO,mBAAmB,yBAAyB,EAAE,EAAE,GAAG;AAAA,QACtD;AAAA,MACJ;AAAA,IACJ;AAAA,EACJ,CAAC;AACL,CAAC;",
  "names": []
}
