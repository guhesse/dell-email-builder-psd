"use strict";var c=Object.defineProperty;var u=Object.getOwnPropertyDescriptor;var i=(a,r,t,l)=>{for(var e=l>1?void 0:l?u(r,t):r,o=a.length-1,n;o>=0;o--)(n=a[o])&&(e=(l?n(r,t,e):n(e))||e);return l&&e&&c(r,t,e),e};import{html as p,nothing as y,SpectrumElement as d}from"@spectrum-web-components/base";import{property as s}from"@spectrum-web-components/base/src/decorators.js";import m from"./popover.css.js";export class Popover extends d{constructor(){super(...arguments);this.dialog=!1;this.open=!1;this.placement="none";this.tip=!1}static get styles(){return[m]}renderTip(){return p`
            <div id="tip">
                <svg
                    xmlns="http://www.w3.org/svg/2000"
                    class="tip"
                    viewBox="0 0 24 12"
                >
                    <path
                        class="triangle"
                        d="M 0.7071067811865476 0 L 11.414213562373096 10.707106781186548 L 22.121320343559645 0"
                    ></path>
                </svg>
            </div>
        `}connectedCallback(){super.connectedCallback(),this.addEventListener("sp-overlay-query",this.onOverlayQuery)}disconnectedCallback(){super.disconnectedCallback(),this.removeEventListener("sp-overlay-query",this.onOverlayQuery)}onOverlayQuery(t){if(!t.target||t.target!==this)return;const e=this.shadowRoot.querySelector("#tip");e&&(t.detail.overlayContentTipElement=e)}render(){return p`
            <slot></slot>
            ${this.tip?this.renderTip():y}
        `}}i([s({type:Boolean,reflect:!0})],Popover.prototype,"dialog",2),i([s({type:Boolean,reflect:!0})],Popover.prototype,"open",2),i([s({reflect:!0})],Popover.prototype,"placement",2),i([s({type:Boolean,reflect:!0})],Popover.prototype,"tip",2);
//# sourceMappingURL=Popover.js.map
