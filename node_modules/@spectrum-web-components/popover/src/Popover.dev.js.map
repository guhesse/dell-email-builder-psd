{
  "version": 3,
  "sources": ["Popover.ts"],
  "sourcesContent": ["/*\nCopyright 2020 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\n\nimport {\n    CSSResultArray,\n    html,\n    nothing,\n    SpectrumElement,\n    TemplateResult,\n} from '@spectrum-web-components/base';\nimport { property } from '@spectrum-web-components/base/src/decorators.js';\nimport type {\n    OverlayDisplayQueryDetail,\n    Placement,\n} from '@spectrum-web-components/overlay/src/overlay-types.js';\nimport popoverStyles from './popover.css.js';\n\n/**\n * @element sp-popover\n *\n * @slot - content to display within the Popover\n */\nexport class Popover extends SpectrumElement {\n    public static override get styles(): CSSResultArray {\n        return [popoverStyles];\n    }\n\n    /**\n     * Whether the popover should manage the application\n     * of padding to its content or not.\n     */\n    @property({ type: Boolean, reflect: true })\n    public dialog = false;\n\n    /**\n     * Whether the popover is visible or not.\n     */\n    @property({ type: Boolean, reflect: true })\n    public open = false;\n\n    /**\n     * @type {\"auto\" | \"auto-start\" | \"auto-end\" | \"top\" | \"bottom\" | \"right\" | \"left\" | \"top-start\" | \"top-end\" | \"bottom-start\" | \"bottom-end\" | \"right-start\" | \"right-end\" | \"left-start\" | \"left-end\" | \"none\"}\n     * @attr\n     */\n    @property({ reflect: true })\n    public placement: Placement = 'none';\n\n    @property({ type: Boolean, reflect: true })\n    public tip = false;\n\n    protected renderTip(): TemplateResult {\n        return html`\n            <div id=\"tip\">\n                <svg\n                    xmlns=\"http://www.w3.org/svg/2000\"\n                    class=\"tip\"\n                    viewBox=\"0 0 24 12\"\n                >\n                    <path\n                        class=\"triangle\"\n                        d=\"M 0.7071067811865476 0 L 11.414213562373096 10.707106781186548 L 22.121320343559645 0\"\n                    ></path>\n                </svg>\n            </div>\n        `;\n    }\n\n    public override connectedCallback(): void {\n        super.connectedCallback();\n        this.addEventListener(\n            'sp-overlay-query',\n            this.onOverlayQuery as EventListener\n        );\n    }\n\n    public override disconnectedCallback(): void {\n        super.disconnectedCallback();\n        this.removeEventListener(\n            'sp-overlay-query',\n            this.onOverlayQuery as EventListener\n        );\n    }\n\n    public onOverlayQuery(event: CustomEvent<OverlayDisplayQueryDetail>): void {\n        /* c8 ignore next */\n        if (!event.target) return;\n\n        const target = event.target as Node;\n        /* c8 ignore next */\n        if (target !== this) return;\n\n        const tipElement = this.shadowRoot.querySelector('#tip') as HTMLElement;\n        if (tipElement) {\n            event.detail.overlayContentTipElement = tipElement;\n        }\n    }\n\n    protected override render(): TemplateResult {\n        return html`\n            <slot></slot>\n            ${this.tip ? this.renderTip() : nothing}\n        `;\n    }\n}\n"],
  "mappings": ";;;;;;;;;;;;AAYA;AAAA,EAEI;AAAA,EACA;AAAA,EACA;AAAA,OAEG;AACP,SAAS,gBAAgB;AAKzB,OAAO,mBAAmB;AAOnB,aAAM,gBAAgB,gBAAgB;AAAA,EAAtC;AAAA;AAUH,SAAO,SAAS;AAMhB,SAAO,OAAO;AAOd,SAAO,YAAuB;AAG9B,SAAO,MAAM;AAAA;AAAA,EAzBb,WAA2B,SAAyB;AAChD,WAAO,CAAC,aAAa;AAAA,EACzB;AAAA,EAyBU,YAA4B;AAClC,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAcX;AAAA,EAEgB,oBAA0B;AACtC,UAAM,kBAAkB;AACxB,SAAK;AAAA,MACD;AAAA,MACA,KAAK;AAAA,IACT;AAAA,EACJ;AAAA,EAEgB,uBAA6B;AACzC,UAAM,qBAAqB;AAC3B,SAAK;AAAA,MACD;AAAA,MACA,KAAK;AAAA,IACT;AAAA,EACJ;AAAA,EAEO,eAAe,OAAqD;AAEvE,QAAI,CAAC,MAAM;AAAQ;AAEnB,UAAM,SAAS,MAAM;AAErB,QAAI,WAAW;AAAM;AAErB,UAAM,aAAa,KAAK,WAAW,cAAc,MAAM;AACvD,QAAI,YAAY;AACZ,YAAM,OAAO,2BAA2B;AAAA,IAC5C;AAAA,EACJ;AAAA,EAEmB,SAAyB;AACxC,WAAO;AAAA;AAAA,cAED,KAAK,MAAM,KAAK,UAAU,IAAI;AAAA;AAAA,EAExC;AACJ;AAvEW;AAAA,EADN,SAAS,EAAE,MAAM,SAAS,SAAS,KAAK,CAAC;AAAA,GATjC,QAUF;AAMA;AAAA,EADN,SAAS,EAAE,MAAM,SAAS,SAAS,KAAK,CAAC;AAAA,GAfjC,QAgBF;AAOA;AAAA,EADN,SAAS,EAAE,SAAS,KAAK,CAAC;AAAA,GAtBlB,QAuBF;AAGA;AAAA,EADN,SAAS,EAAE,MAAM,SAAS,SAAS,KAAK,CAAC;AAAA,GAzBjC,QA0BF;",
  "names": []
}
