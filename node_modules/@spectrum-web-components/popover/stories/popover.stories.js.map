{
  "version": 3,
  "sources": ["popover.stories.ts"],
  "sourcesContent": ["/*\nCopyright 2020 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\nimport '@spectrum-web-components/popover/sp-popover.js';\nimport { html, TemplateResult } from '@spectrum-web-components/base';\nimport { Placement } from '@spectrum-web-components/overlay';\n\nexport default {\n    component: 'sp-popover',\n    title: 'Popover',\n    argTypes: {\n        open: {\n            name: 'open',\n            type: { name: 'boolean', required: false },\n            description: 'Whether the popover is open or not.',\n            table: {\n                type: { summary: 'boolean' },\n                defaultValue: { summary: false },\n            },\n            control: 'boolean',\n        },\n        placement: {\n            name: 'placement',\n            type: { name: 'string', required: false },\n            description:\n                'The placement of the popover content in relation to the tip',\n            table: {\n                type: { summary: 'string' },\n                defaultValue: { summary: 'none' },\n            },\n            control: 'text',\n        },\n        tip: {\n            name: 'tip',\n            description: 'Whether the popover has a tip.',\n            type: { name: 'boolean', required: false },\n            table: {\n                type: { summary: 'boolean' },\n                defaultValue: { summary: false },\n            },\n            control: 'boolean',\n        },\n    },\n    args: {\n        open: true,\n        placement: 'none',\n        tip: false,\n    },\n};\n\nexport const Default = ({ content }: { content: string }): TemplateResult => {\n    return html`\n        <div style=\"color: var(--spectrum-global-color-gray-800)\">\n            <sp-popover variant=\"default\" open style=\"max-width: 320px\">\n                <div style=\"font-size: 14px; padding: 10px\">${content}</div>\n            </sp-popover>\n        </div>\n    `;\n};\nDefault.args = {\n    content: 'The quick brown fox jumps over the lazy dog',\n};\nDefault.argTypes = {\n    content: {\n        name: 'content',\n        type: { name: 'string', required: false },\n        table: {\n            type: { summary: 'string' },\n            defaultValue: { summary: '' },\n        },\n        control: 'text',\n    },\n};\n\ninterface StoryArgs {\n    tip?: boolean;\n    placement: Placement;\n    open?: boolean;\n}\n\nconst Template = ({ tip, placement, open }: StoryArgs): TemplateResult => {\n    return html`\n        <div\n            style=\"color: var(--spectrum-global-color-gray-800); position: relative; display: contents\"\n        >\n            <sp-popover\n                variant=\"dialog\"\n                placement=${placement}\n                ?open=${open}\n                style=\" max-width: 320px\"\n                .tip=\"${tip}\"\n            >\n                <div\n                    style=\"padding-bottom: 30px; font-size: 18px; font-weight: 700\"\n                >\n                    Popover Title\n                </div>\n                <div style=\"font-size: 14px\">\n                    Cupcake ipsum dolor sit amet jelly beans. Chocolate jelly\n                    caramels. Icing souffl\u00E9 chupa chups donut cheesecake.\n                    Jelly-o chocolate cake sweet roll cake danish candy biscuit\n                    halvah\n                </div>\n            </sp-popover>\n        </div>\n    `;\n};\n\nexport const dialogTop = (args: StoryArgs): TemplateResult => Template(args);\ndialogTop.args = {\n    tip: true,\n    placement: 'top',\n};\nexport const dialogRight = (args: StoryArgs): TemplateResult => Template(args);\ndialogRight.args = {\n    tip: true,\n    placement: 'right',\n};\nexport const dialogBottom = (args: StoryArgs): TemplateResult => Template(args);\ndialogBottom.args = {\n    tip: true,\n    placement: 'bottom',\n};\nexport const dialogLeft = (args: StoryArgs): TemplateResult => Template(args);\ndialogLeft.args = {\n    tip: true,\n    placement: 'left',\n};\n"],
  "mappings": ";AAUA,OAAO;AACP,SAAS,YAA4B;AAGrC,eAAe;AAAA,EACX,WAAW;AAAA,EACX,OAAO;AAAA,EACP,UAAU;AAAA,IACN,MAAM;AAAA,MACF,MAAM;AAAA,MACN,MAAM,EAAE,MAAM,WAAW,UAAU,MAAM;AAAA,MACzC,aAAa;AAAA,MACb,OAAO;AAAA,QACH,MAAM,EAAE,SAAS,UAAU;AAAA,QAC3B,cAAc,EAAE,SAAS,MAAM;AAAA,MACnC;AAAA,MACA,SAAS;AAAA,IACb;AAAA,IACA,WAAW;AAAA,MACP,MAAM;AAAA,MACN,MAAM,EAAE,MAAM,UAAU,UAAU,MAAM;AAAA,MACxC,aACI;AAAA,MACJ,OAAO;AAAA,QACH,MAAM,EAAE,SAAS,SAAS;AAAA,QAC1B,cAAc,EAAE,SAAS,OAAO;AAAA,MACpC;AAAA,MACA,SAAS;AAAA,IACb;AAAA,IACA,KAAK;AAAA,MACD,MAAM;AAAA,MACN,aAAa;AAAA,MACb,MAAM,EAAE,MAAM,WAAW,UAAU,MAAM;AAAA,MACzC,OAAO;AAAA,QACH,MAAM,EAAE,SAAS,UAAU;AAAA,QAC3B,cAAc,EAAE,SAAS,MAAM;AAAA,MACnC;AAAA,MACA,SAAS;AAAA,IACb;AAAA,EACJ;AAAA,EACA,MAAM;AAAA,IACF,MAAM;AAAA,IACN,WAAW;AAAA,IACX,KAAK;AAAA,EACT;AACJ;AAEO,aAAM,UAAU,CAAC,EAAE,QAAQ,MAA2C;AACzE,SAAO;AAAA;AAAA;AAAA,8DAGmD;AAAA;AAAA;AAAA;AAI9D;AACA,QAAQ,OAAO;AAAA,EACX,SAAS;AACb;AACA,QAAQ,WAAW;AAAA,EACf,SAAS;AAAA,IACL,MAAM;AAAA,IACN,MAAM,EAAE,MAAM,UAAU,UAAU,MAAM;AAAA,IACxC,OAAO;AAAA,MACH,MAAM,EAAE,SAAS,SAAS;AAAA,MAC1B,cAAc,EAAE,SAAS,GAAG;AAAA,IAChC;AAAA,IACA,SAAS;AAAA,EACb;AACJ;AAQA,MAAM,WAAW,CAAC,EAAE,KAAK,WAAW,KAAK,MAAiC;AACtE,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAMiB;AAAA,wBACJ;AAAA;AAAA,wBAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBxB;AAEO,aAAM,YAAY,CAAC,SAAoC,SAAS,IAAI;AAC3E,UAAU,OAAO;AAAA,EACb,KAAK;AAAA,EACL,WAAW;AACf;AACO,aAAM,cAAc,CAAC,SAAoC,SAAS,IAAI;AAC7E,YAAY,OAAO;AAAA,EACf,KAAK;AAAA,EACL,WAAW;AACf;AACO,aAAM,eAAe,CAAC,SAAoC,SAAS,IAAI;AAC9E,aAAa,OAAO;AAAA,EAChB,KAAK;AAAA,EACL,WAAW;AACf;AACO,aAAM,aAAa,CAAC,SAAoC,SAAS,IAAI;AAC5E,WAAW,OAAO;AAAA,EACd,KAAK;AAAA,EACL,WAAW;AACf;",
  "names": []
}
