{
  "schemaVersion": "1.0.0",
  "readme": "",
  "modules": [
    {
      "kind": "javascript-module",
      "path": "sp-number-field.js",
      "declarations": [],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "sp-number-field",
          "declaration": {
            "name": "NumberField",
            "module": "/src/NumberField.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/NumberField.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "FRAMES_PER_CHANGE",
          "type": {
            "text": "number"
          },
          "default": "5"
        },
        {
          "kind": "variable",
          "name": "CHANGE_DEBOUNCE_MS",
          "type": {
            "text": "number"
          },
          "default": "100"
        },
        {
          "kind": "variable",
          "name": "indeterminatePlaceholder",
          "type": {
            "text": "string"
          },
          "default": "'-'"
        },
        {
          "kind": "variable",
          "name": "remapMultiByteCharacters",
          "type": {
            "text": "Record<string, string>"
          },
          "default": "{\n    '１': '1',\n    '２': '2',\n    '３': '3',\n    '４': '4',\n    '５': '5',\n    '６': '6',\n    '７': '7',\n    '８': '8',\n    '９': '9',\n    '０': '0',\n    '、': ',',\n    '，': ',',\n    '。': '.',\n    '．': '.',\n    '％': '%',\n    '＋': '+',\n    ー: '-',\n}"
        },
        {
          "kind": "class",
          "description": "",
          "name": "NumberField",
          "slots": [
            {
              "description": "default or non-negative help text to associate to your form element",
              "name": "help-text"
            },
            {
              "description": "negative help text to associate to your form element when `invalid`",
              "name": "negative-help-text"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "buttons",
              "type": {
                "text": "HTMLDivElement"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "focused",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "focused",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "_forcedUnit",
              "type": {
                "text": "string"
              },
              "default": "''"
            },
            {
              "kind": "field",
              "name": "formatOptions",
              "type": {
                "text": "Intl.NumberFormatOptions"
              },
              "privacy": "public",
              "default": "{}",
              "description": "An `&lt;sp-number-field&gt;` element will process its numeric value with\n`new Intl.NumberFormat(this.resolvedLanguage, this.formatOptions).format(this.valueAsNumber)`\nin order to prepare it for visual delivery in the input. In order to customize this\nprocessing supply your own `Intl.NumberFormatOptions` object here.\n\nSee: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat/NumberFormat",
              "attribute": "format-options"
            },
            {
              "kind": "field",
              "name": "hideStepper",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "description": "Whether the stepper UI is hidden or not.",
              "attribute": "hide-stepper",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "indeterminate",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "indeterminate",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "keyboardFocused",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "keyboard-focused",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "max",
              "type": {
                "text": "number | undefined"
              },
              "privacy": "public",
              "attribute": "max"
            },
            {
              "kind": "field",
              "name": "min",
              "type": {
                "text": "number | undefined"
              },
              "privacy": "public",
              "attribute": "min"
            },
            {
              "kind": "field",
              "name": "step",
              "type": {
                "text": "number | undefined"
              },
              "privacy": "public",
              "description": "The distance by which to alter the value of the element when taking a \"step\".\n\nWhen `this.formatOptions.style === 'percentage'` the default step will be\nset to 0.01 unless otherwise supplied to the element.",
              "attribute": "step"
            },
            {
              "kind": "field",
              "name": "managedInput",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "stepModifier",
              "type": {
                "text": "number"
              },
              "privacy": "public",
              "default": "10",
              "attribute": "step-modifier",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "value",
              "privacy": "public",
              "type": {
                "text": "number"
              },
              "attribute": "value"
            },
            {
              "kind": "field",
              "name": "inputValue",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "_value",
              "privacy": "public",
              "default": "NaN"
            },
            {
              "kind": "field",
              "name": "_trackingValue",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "default": "''"
            },
            {
              "kind": "field",
              "name": "lastCommitedValue",
              "type": {
                "text": "number | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "setValue",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "value",
                  "default": "this.value",
                  "type": {
                    "text": "number"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "valueAsString",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "description": "Retreive the value of the element parsed to a Number."
            },
            {
              "kind": "field",
              "name": "formattedValue",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "convertValueToNumber",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "number"
                }
              },
              "parameters": [
                {
                  "name": "value",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "_step",
              "type": {
                "text": "number"
              },
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "nextChange",
              "type": {
                "text": "number"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "changeCount",
              "type": {
                "text": "number"
              },
              "privacy": "private",
              "default": "0"
            },
            {
              "kind": "field",
              "name": "findChange",
              "type": {
                "text": "(event: PointerEvent) => void"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "change",
              "type": {
                "text": "(event: PointerEvent) => void"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "safty",
              "type": {
                "text": "number"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "languageResolver",
              "privacy": "private",
              "default": "new LanguageResolutionController(this)"
            },
            {
              "kind": "method",
              "name": "handlePointerdown",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "PointerEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "startChange",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "PointerEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "doChange",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "PointerEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handlePointermove",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "PointerEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handlePointerup",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "PointerEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "doNextChange",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "number"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "PointerEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "stepBy",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "count",
                  "type": {
                    "text": "number"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "increment",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "factor",
                  "default": "1"
                }
              ]
            },
            {
              "kind": "method",
              "name": "decrement",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "factor",
                  "default": "1"
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleKeydown",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "KeyboardEvent"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "queuedChangeEvent",
              "type": {
                "text": "number"
              },
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "onScroll",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "WheelEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onFocus",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "onBlur",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "handleFocusin",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "handleFocusout",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "field",
              "name": "wasIndeterminate",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "indeterminateValue",
              "type": {
                "text": "number | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleChange",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "handleCompositionStart",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "handleCompositionEnd",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "handleInput",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "validateInput",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "number"
                }
              },
              "parameters": [
                {
                  "name": "value",
                  "type": {
                    "text": "number"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "displayValue",
              "type": {
                "text": "string"
              },
              "privacy": "protected",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "clearNumberFormatterCache",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "field",
              "name": "numberFormatter",
              "type": {
                "text": "NumberFormatter"
              },
              "privacy": "protected",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "_numberFormatter",
              "type": {
                "text": "NumberFormatter | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_numberFormatterFocused",
              "type": {
                "text": "NumberFormatter | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "numberParser",
              "type": {
                "text": "NumberParser"
              },
              "privacy": "protected",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "applyFocusElementLabel"
            },
            {
              "kind": "field",
              "name": "_numberParser",
              "type": {
                "text": "NumberParser | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_numberParserFocused",
              "type": {
                "text": "NumberParser | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "renderField",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult"
                }
              }
            },
            {
              "kind": "field",
              "name": "isComposing",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false"
            }
          ],
          "events": [
            {
              "name": "change",
              "type": {
                "text": "Event"
              }
            },
            {
              "name": "input",
              "type": {
                "text": "Event"
              }
            }
          ],
          "attributes": [
            {
              "name": "focused",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "focused"
            },
            {
              "name": "format-options",
              "type": {
                "text": "Intl.NumberFormatOptions"
              },
              "default": "{}",
              "description": "An `&lt;sp-number-field&gt;` element will process its numeric value with\n`new Intl.NumberFormat(this.resolvedLanguage, this.formatOptions).format(this.valueAsNumber)`\nin order to prepare it for visual delivery in the input. In order to customize this\nprocessing supply your own `Intl.NumberFormatOptions` object here.\n\nSee: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat/NumberFormat",
              "fieldName": "formatOptions"
            },
            {
              "name": "hide-stepper",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether the stepper UI is hidden or not.",
              "fieldName": "hideStepper"
            },
            {
              "name": "indeterminate",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "indeterminate"
            },
            {
              "name": "keyboard-focused",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "keyboardFocused"
            },
            {
              "name": "max",
              "type": {
                "text": "number | undefined"
              },
              "fieldName": "max"
            },
            {
              "name": "min",
              "type": {
                "text": "number | undefined"
              },
              "fieldName": "min"
            },
            {
              "name": "step",
              "type": {
                "text": "number | undefined"
              },
              "description": "The distance by which to alter the value of the element when taking a \"step\".\n\nWhen `this.formatOptions.style === 'percentage'` the default step will be\nset to 0.01 unless otherwise supplied to the element.",
              "fieldName": "step"
            },
            {
              "name": "step-modifier",
              "type": {
                "text": "number"
              },
              "default": "10",
              "fieldName": "stepModifier"
            },
            {
              "name": "value",
              "type": {
                "text": "number"
              },
              "fieldName": "value"
            }
          ],
          "superclass": {
            "name": "TextfieldBase",
            "package": "@spectrum-web-components/textfield"
          },
          "tagName": "sp-number-field",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "FRAMES_PER_CHANGE",
          "declaration": {
            "name": "FRAMES_PER_CHANGE",
            "module": "src/NumberField.js"
          }
        },
        {
          "kind": "js",
          "name": "CHANGE_DEBOUNCE_MS",
          "declaration": {
            "name": "CHANGE_DEBOUNCE_MS",
            "module": "src/NumberField.js"
          }
        },
        {
          "kind": "js",
          "name": "indeterminatePlaceholder",
          "declaration": {
            "name": "indeterminatePlaceholder",
            "module": "src/NumberField.js"
          }
        },
        {
          "kind": "js",
          "name": "remapMultiByteCharacters",
          "declaration": {
            "name": "remapMultiByteCharacters",
            "module": "src/NumberField.js"
          }
        },
        {
          "kind": "js",
          "name": "NumberField",
          "declaration": {
            "name": "NumberField",
            "module": "src/NumberField.js"
          }
        }
      ]
    }
  ]
}
