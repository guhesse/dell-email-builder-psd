"use strict";export const elementResolverUpdatedSymbol=Symbol("element resolver updated");export class ElementResolutionController{constructor(e,{selector:t}={selector:""}){this._element=null;this._selector="";this.mutationCallback=e=>{let t=!1;e.forEach(s=>{if(!t){if(s.type==="childList"){const l=this.element&&[...s.removedNodes].includes(this.element),n=!!this.selector&&[...s.addedNodes].some(r=>{var o;return(o=r==null?void 0:r.matches)==null?void 0:o.call(r,this.selector)});t=t||l||n}if(s.type==="attributes"){const l=s.target===this.element,n=!!this.selector&&s.target.matches(this.selector);t=t||l||n}}}),t&&this.resolveElement()};this.host=e,this.selector=t,this.observer=new MutationObserver(this.mutationCallback),this.host.addController(this)}get element(){return this._element}set element(e){if(e===this.element)return;const t=this.element;this._element=e,this.host.requestUpdate(elementResolverUpdatedSymbol,t)}get selector(){return this._selector}set selector(e){e!==this.selector&&(this.releaseElement(),this._selector=e,this.resolveElement())}hostConnected(){this.resolveElement(),this.observer.observe(this.host.getRootNode(),{subtree:!0,childList:!0,attributes:!0})}hostDisconnected(){this.releaseElement(),this.observer.disconnect()}resolveElement(){if(!this.selector){this.releaseElement();return}const e=this.host.getRootNode();this.element=e.querySelector(this.selector)}releaseElement(){this.element=null}}
//# sourceMappingURL=ElementResolution.js.map
