{
  "schemaVersion": "1.0.0",
  "readme": "",
  "modules": [
    {
      "kind": "javascript-module",
      "path": "sp-slider-handle.js",
      "declarations": [],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "sp-slider-handle",
          "declaration": {
            "name": "SliderHandle",
            "module": "/src/SliderHandle.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "sp-slider.js",
      "declarations": [],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "sp-slider",
          "declaration": {
            "name": "Slider",
            "module": "/src/Slider.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "sync/sp-slider.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/HandleController.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "HandleController",
          "members": [
            {
              "kind": "field",
              "name": "host",
              "type": {
                "text": "Slider"
              },
              "privacy": "private",
              "default": "host"
            },
            {
              "kind": "field",
              "name": "handles",
              "type": {
                "text": "Map<string, SliderHandle>"
              },
              "privacy": "private",
              "default": "new Map()"
            },
            {
              "kind": "field",
              "name": "model",
              "type": {
                "text": "ModelValue[]"
              },
              "privacy": "private",
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "handleOrder",
              "type": {
                "text": "string[]"
              },
              "privacy": "private",
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "draggingHandle",
              "type": {
                "text": "SliderHandle | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "handleRefMap",
              "type": {
                "text": "WeakMap<SliderHandle, HandleReference> | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "values",
              "type": {
                "text": "HandleValueDictionary"
              },
              "privacy": "public",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "size",
              "type": {
                "text": "number"
              },
              "privacy": "public",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "inputForHandle",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "HTMLInputElement | undefined"
                }
              },
              "parameters": [
                {
                  "name": "handle",
                  "type": {
                    "text": "SliderHandle"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "setValueFromHandle",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "handle",
                  "type": {
                    "text": "SliderHandle"
                  },
                  "description": "Handle who's value needs validation"
                }
              ],
              "description": "It is possible for value attributes to be set programmatically. The <input>\nfor a particular slider needs to have an opportunity to validate any such\nvalues"
            },
            {
              "kind": "method",
              "name": "handleHasChanged",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "handle",
                  "type": {
                    "text": "SliderHandle"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "formattedValueForHandle",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "string"
                }
              },
              "parameters": [
                {
                  "name": "model",
                  "type": {
                    "text": "ModelValue"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "formattedValues",
              "type": {
                "text": "Map<string, string>"
              },
              "privacy": "public",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "focusElement",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "public",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "handleOrientation",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "hostConnected",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "hostDisconnected",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "hostUpdate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "waitForUpgrade",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "handle",
                  "type": {
                    "text": "HTMLElement"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "extractModelFromLightDom",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "activeHandle",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "activeHandleInputId",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "activateHandle",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getActiveHandleElements",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "HandleComponents"
                }
              }
            },
            {
              "kind": "method",
              "name": "getHandleElements",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "HandleReference"
                }
              },
              "parameters": [
                {
                  "name": "sliderHandle",
                  "type": {
                    "text": "SliderHandle"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "clearHandleComponentCache",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "field",
              "name": "_boundingClientRect",
              "type": {
                "text": "DOMRect | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "boundingClientRect",
              "type": {
                "text": "DOMRect"
              },
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "updateBoundingRect",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "extractDataFromEvent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "DataFromPointerEvent"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "PointerEvent"
                  }
                }
              ],
              "description": "Return the `input` and `model` associated with the event and\nwhether the `input` is a `resolvedInput` meaning it was acquired\nfrom the `model` rather than the event."
            },
            {
              "kind": "field",
              "name": "_activePointerEventData",
              "type": {
                "text": "DataFromPointerEvent | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handlePointerdown",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "PointerEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handlePointerup",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "PointerEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handlePointermove",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "PointerEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "cancelDrag",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "model",
                  "optional": true,
                  "type": {
                    "text": "ModelValue"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "onInputChange",
              "privacy": "private",
              "description": "Keep the slider value property in sync with the input element's value"
            },
            {
              "kind": "field",
              "name": "onInputFocus",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "onInputBlur",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "onInputKeydown",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "dispatchChangeEvent",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "input",
                  "type": {
                    "text": "HTMLInputElement"
                  }
                },
                {
                  "name": "handle",
                  "type": {
                    "text": "SliderHandle"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "calculateHandlePosition",
              "privacy": "private",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "PointerEvent | MouseEvent"
                  }
                },
                {
                  "name": "model",
                  "type": {
                    "text": "ModelValue"
                  }
                },
                {
                  "description": ": PointerEvent on slider",
                  "name": ""
                }
              ],
              "description": "Returns the value under the cursor"
            },
            {
              "kind": "method",
              "name": "renderHandle",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult"
                }
              },
              "parameters": [
                {
                  "name": "model",
                  "type": {
                    "text": "ModelValue"
                  }
                },
                {
                  "name": "index",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "zIndex",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "isMultiHandle",
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "trackSegments",
              "privacy": "public",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "description": "Returns a list of track segment [start, end] tuples where the values are\nnormalized to be between 0 and 1."
            },
            {
              "kind": "method",
              "name": "updateModel",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "handleUpdatesComplete",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "HandleController",
          "declaration": {
            "name": "HandleController",
            "module": "src/HandleController.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/Slider.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "variants",
          "type": {
            "text": "array"
          },
          "default": "['filled', 'ramp', 'range', 'tick']"
        },
        {
          "kind": "class",
          "description": "",
          "name": "Slider",
          "slots": [
            {
              "description": "text label for the Slider",
              "name": ""
            },
            {
              "description": "optionally accepts two or more sp-slider-handle elements",
              "name": "handle"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "handleController",
              "type": {
                "text": "HandleController | undefined"
              },
              "privacy": "public",
              "default": "new HandleController(\n        this\n    )",
              "inheritedFrom": {
                "name": "SliderHandle",
                "module": "src/SliderHandle.js"
              }
            },
            {
              "kind": "field",
              "name": "editable",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Whether to display a Number Field along side the slider UI",
              "attribute": "editable",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "_editable",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "hideStepper",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "description": "Whether the stepper UI of the Number Field is hidden or not",
              "attribute": "hide-stepper",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "''",
              "attribute": "type"
            },
            {
              "kind": "field",
              "name": "variant",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "attribute": "variant"
            },
            {
              "kind": "field",
              "name": "values",
              "type": {
                "text": "HandleValueDictionary"
              },
              "privacy": "public",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "handleName",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "readonly": true,
              "inheritedFrom": {
                "name": "SliderHandle",
                "module": "src/SliderHandle.js"
              }
            },
            {
              "kind": "field",
              "name": "_variant",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "default": "''"
            },
            {
              "kind": "field",
              "name": "getAriaValueText",
              "type": {
                "text": "(values: Map<string, string>) => string"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "ariaValueText",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "labelVisibility",
              "type": {
                "text": "'text' | 'value' | 'none' | undefined"
              },
              "privacy": "public",
              "attribute": "label-visibility",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "min",
              "type": {
                "text": "number | 'previous' | undefined"
              },
              "privacy": "public",
              "attribute": "min",
              "reflects": true,
              "default": "0",
              "inheritedFrom": {
                "name": "SliderHandle",
                "module": "src/SliderHandle.js"
              }
            },
            {
              "kind": "field",
              "name": "max",
              "type": {
                "text": "number | 'next' | undefined"
              },
              "privacy": "public",
              "attribute": "max",
              "reflects": true,
              "default": "100",
              "inheritedFrom": {
                "name": "SliderHandle",
                "module": "src/SliderHandle.js"
              }
            },
            {
              "kind": "field",
              "name": "step",
              "type": {
                "text": "number | undefined"
              },
              "privacy": "public",
              "attribute": "step",
              "reflects": true,
              "default": "1",
              "inheritedFrom": {
                "name": "SliderHandle",
                "module": "src/SliderHandle.js"
              }
            },
            {
              "kind": "field",
              "name": "tickStep",
              "type": {
                "text": "number"
              },
              "privacy": "public",
              "default": "0",
              "attribute": "tick-step"
            },
            {
              "kind": "field",
              "name": "tickLabels",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "tick-labels"
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "disabled",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "quiet",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "description": "Applies `quiet` to the underlying `sp-number-field` when `editable === true`.",
              "attribute": "quiet"
            },
            {
              "kind": "field",
              "name": "indeterminate",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "description": "Applies `indeterminate` to the underlying `sp-number-field` when `editable === true`. Is removed on the next `change` event.",
              "attribute": "indeterminate"
            },
            {
              "kind": "field",
              "name": "labelEl",
              "type": {
                "text": "HTMLLabelElement"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "numberField",
              "type": {
                "text": "NumberField"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "track",
              "type": {
                "text": "HTMLDivElement"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "numberFormat",
              "type": {
                "text": "NumberFormatter | undefined"
              },
              "privacy": "public",
              "readonly": true,
              "inheritedFrom": {
                "name": "SliderHandle",
                "module": "src/SliderHandle.js"
              }
            },
            {
              "kind": "field",
              "name": "focusElement",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "public",
              "readonly": true,
              "inheritedFrom": {
                "name": "SliderHandle",
                "module": "src/SliderHandle.js"
              }
            },
            {
              "kind": "method",
              "name": "handleLabelClick",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "renderLabel",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult"
                }
              }
            },
            {
              "kind": "method",
              "name": "renderRamp",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult"
                }
              }
            },
            {
              "kind": "method",
              "name": "renderTicks",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult"
                }
              }
            },
            {
              "kind": "method",
              "name": "renderTrackSegment",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult"
                }
              },
              "parameters": [
                {
                  "name": "start",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "end",
                  "type": {
                    "text": "number"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "renderTrack",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult"
                }
              }
            },
            {
              "kind": "method",
              "name": "handlePointerdown",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "PointerEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handlePointermove",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "PointerEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handlePointerup",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "PointerEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleNumberInput",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event & { target: NumberField }"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleNumberChange",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event & { target: NumberField }"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "trackSegmentStyles",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "StyleInfo"
                }
              },
              "parameters": [
                {
                  "name": "start",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "end",
                  "type": {
                    "text": "number"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "_numberFieldInput",
              "type": {
                "text": "Promise<unknown>"
              },
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "getUpdateComplete",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Promise<boolean>"
                }
              }
            },
            {
              "kind": "field",
              "name": "_forcedUnit",
              "type": {
                "text": "string"
              },
              "default": "''",
              "inheritedFrom": {
                "name": "SliderHandle",
                "module": "src/SliderHandle.js"
              }
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "number"
              },
              "description": "By default, the value of a Slider Handle will be halfway between its\n`min` and `max` values, or the `min` value when `max` is less than `min`.",
              "attribute": "value",
              "inheritedFrom": {
                "name": "SliderHandle",
                "module": "src/SliderHandle.js"
              }
            },
            {
              "kind": "field",
              "name": "dragging",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "dragging",
              "reflects": true,
              "inheritedFrom": {
                "name": "SliderHandle",
                "module": "src/SliderHandle.js"
              }
            },
            {
              "kind": "field",
              "name": "highlight",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "highlight",
              "inheritedFrom": {
                "name": "SliderHandle",
                "module": "src/SliderHandle.js"
              }
            },
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "''",
              "attribute": "name",
              "inheritedFrom": {
                "name": "SliderHandle",
                "module": "src/SliderHandle.js"
              }
            },
            {
              "kind": "field",
              "name": "formatOptions",
              "type": {
                "text": "NumberFormatOptions | undefined"
              },
              "privacy": "public",
              "attribute": "format-options",
              "inheritedFrom": {
                "name": "SliderHandle",
                "module": "src/SliderHandle.js"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "''",
              "attribute": "label",
              "inheritedFrom": {
                "name": "SliderHandle",
                "module": "src/SliderHandle.js"
              }
            },
            {
              "kind": "field",
              "name": "getAriaHandleText",
              "type": {
                "text": "(\n        value: number,\n        numberFormat: NumberFormatter\n    ) => string"
              },
              "privacy": "public",
              "inheritedFrom": {
                "name": "SliderHandle",
                "module": "src/SliderHandle.js"
              }
            },
            {
              "kind": "field",
              "name": "languageResolver",
              "privacy": "private",
              "default": "new LanguageResolutionController(this)",
              "inheritedFrom": {
                "name": "SliderHandle",
                "module": "src/SliderHandle.js"
              }
            },
            {
              "kind": "field",
              "name": "normalization",
              "type": {
                "text": "SliderNormalization"
              },
              "privacy": "public",
              "default": "{\n    toNormalized(value: number, min: number, max: number) {\n        return (value - min) / (max - min);\n    },\n    fromNormalized(value: number, min: number, max: number) {\n        return value * (max - min) + min;\n    },\n}",
              "inheritedFrom": {
                "name": "SliderHandle",
                "module": "src/SliderHandle.js"
              }
            },
            {
              "kind": "method",
              "name": "dispatchInputEvent",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "SliderHandle",
                "module": "src/SliderHandle.js"
              }
            },
            {
              "kind": "field",
              "name": "_numberFormatCache",
              "type": {
                "text": "| { numberFormat: NumberFormatter; language: string }\n        | undefined"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "SliderHandle",
                "module": "src/SliderHandle.js"
              }
            },
            {
              "kind": "method",
              "name": "getNumberFormat",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "NumberFormatter"
                }
              },
              "inheritedFrom": {
                "name": "SliderHandle",
                "module": "src/SliderHandle.js"
              }
            }
          ],
          "attributes": [
            {
              "name": "editable",
              "type": {
                "text": "boolean"
              },
              "description": "Whether to display a Number Field along side the slider UI",
              "fieldName": "editable"
            },
            {
              "name": "hide-stepper",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether the stepper UI of the Number Field is hidden or not",
              "fieldName": "hideStepper"
            },
            {
              "name": "type",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "type"
            },
            {
              "name": "variant",
              "type": {
                "text": "string"
              },
              "fieldName": "variant"
            },
            {
              "name": "label-visibility",
              "type": {
                "text": "'text' | 'value' | 'none' | undefined"
              },
              "fieldName": "labelVisibility"
            },
            {
              "name": "min",
              "type": {
                "text": "number | 'previous' | undefined"
              },
              "fieldName": "min",
              "default": "0",
              "inheritedFrom": {
                "name": "SliderHandle",
                "module": "src/SliderHandle.ts"
              }
            },
            {
              "name": "max",
              "type": {
                "text": "number | 'next' | undefined"
              },
              "fieldName": "max",
              "default": "100",
              "inheritedFrom": {
                "name": "SliderHandle",
                "module": "src/SliderHandle.ts"
              }
            },
            {
              "name": "step",
              "type": {
                "text": "number | undefined"
              },
              "fieldName": "step",
              "default": "1",
              "inheritedFrom": {
                "name": "SliderHandle",
                "module": "src/SliderHandle.ts"
              }
            },
            {
              "name": "tick-step",
              "type": {
                "text": "number"
              },
              "default": "0",
              "fieldName": "tickStep"
            },
            {
              "name": "tick-labels",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "tickLabels"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "disabled"
            },
            {
              "name": "quiet",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Applies `quiet` to the underlying `sp-number-field` when `editable === true`.",
              "fieldName": "quiet"
            },
            {
              "name": "indeterminate",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Applies `indeterminate` to the underlying `sp-number-field` when `editable === true`. Is removed on the next `change` event.",
              "fieldName": "indeterminate"
            },
            {
              "name": "value",
              "type": {
                "text": "number"
              },
              "description": "By default, the value of a Slider Handle will be halfway between its\n`min` and `max` values, or the `min` value when `max` is less than `min`.",
              "fieldName": "value",
              "inheritedFrom": {
                "name": "SliderHandle",
                "module": "src/SliderHandle.ts"
              }
            },
            {
              "name": "dragging",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "dragging",
              "inheritedFrom": {
                "name": "SliderHandle",
                "module": "src/SliderHandle.ts"
              }
            },
            {
              "name": "highlight",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "highlight",
              "inheritedFrom": {
                "name": "SliderHandle",
                "module": "src/SliderHandle.ts"
              }
            },
            {
              "name": "name",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "name",
              "inheritedFrom": {
                "name": "SliderHandle",
                "module": "src/SliderHandle.ts"
              }
            },
            {
              "name": "format-options",
              "type": {
                "text": "NumberFormatOptions | undefined"
              },
              "fieldName": "formatOptions",
              "inheritedFrom": {
                "name": "SliderHandle",
                "module": "src/SliderHandle.ts"
              }
            },
            {
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "label",
              "inheritedFrom": {
                "name": "SliderHandle",
                "module": "src/SliderHandle.ts"
              }
            }
          ],
          "mixins": [
            {
              "name": "SizedMixin",
              "package": "@spectrum-web-components/base"
            },
            {
              "name": "ObserveSlotText",
              "package": "@spectrum-web-components/shared/src/observe-slot-text.js"
            }
          ],
          "superclass": {
            "name": "SliderHandle",
            "module": "/src/SliderHandle.js"
          },
          "tagName": "sp-slider",
          "customElement": true,
          "events": [
            {
              "name": "sp-slider-handle-ready",
              "type": {
                "text": "CustomEvent"
              },
              "inheritedFrom": {
                "name": "SliderHandle",
                "module": "src/SliderHandle.ts"
              }
            },
            {
              "description": "The value of the element has changed.",
              "name": "input",
              "inheritedFrom": {
                "name": "SliderHandle",
                "module": "src/SliderHandle.ts"
              }
            },
            {
              "description": "An alteration to the value of the element has been committed by the user.",
              "name": "change",
              "inheritedFrom": {
                "name": "SliderHandle",
                "module": "src/SliderHandle.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "variants",
          "declaration": {
            "name": "variants",
            "module": "src/Slider.js"
          }
        },
        {
          "kind": "js",
          "name": "Slider",
          "declaration": {
            "name": "Slider",
            "module": "src/Slider.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/SliderHandle.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "defaultNormalization",
          "type": {
            "text": "SliderNormalization"
          },
          "default": "{\n    toNormalized(value: number, min: number, max: number) {\n        return (value - min) / (max - min);\n    },\n    fromNormalized(value: number, min: number, max: number) {\n        return value * (max - min) + min;\n    },\n}"
        },
        {
          "kind": "class",
          "description": "",
          "name": "SliderHandle",
          "members": [
            {
              "kind": "field",
              "name": "handleController",
              "type": {
                "text": "HandleController | undefined"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "handleName",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "focusElement",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "public",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "_forcedUnit",
              "type": {
                "text": "string"
              },
              "default": "''"
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "number"
              },
              "description": "By default, the value of a Slider Handle will be halfway between its\n`min` and `max` values, or the `min` value when `max` is less than `min`.",
              "attribute": "value"
            },
            {
              "kind": "field",
              "name": "dragging",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "dragging",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "highlight",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "highlight"
            },
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "''",
              "attribute": "name"
            },
            {
              "kind": "field",
              "name": "min",
              "type": {
                "text": "number | 'previous' | undefined"
              },
              "privacy": "public",
              "attribute": "min",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "max",
              "type": {
                "text": "number | 'next' | undefined"
              },
              "privacy": "public",
              "attribute": "max",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "step",
              "type": {
                "text": "number | undefined"
              },
              "privacy": "public",
              "attribute": "step",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "formatOptions",
              "type": {
                "text": "NumberFormatOptions | undefined"
              },
              "privacy": "public",
              "attribute": "format-options"
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "''",
              "attribute": "label"
            },
            {
              "kind": "field",
              "name": "getAriaHandleText",
              "type": {
                "text": "(\n        value: number,\n        numberFormat: NumberFormatter\n    ) => string"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "languageResolver",
              "privacy": "private",
              "default": "new LanguageResolutionController(this)"
            },
            {
              "kind": "field",
              "name": "normalization",
              "type": {
                "text": "SliderNormalization"
              },
              "privacy": "public",
              "default": "{\n    toNormalized(value: number, min: number, max: number) {\n        return (value - min) / (max - min);\n    },\n    fromNormalized(value: number, min: number, max: number) {\n        return value * (max - min) + min;\n    },\n}"
            },
            {
              "kind": "method",
              "name": "dispatchInputEvent",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "field",
              "name": "_numberFormatCache",
              "type": {
                "text": "| { numberFormat: NumberFormatter; language: string }\n        | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "getNumberFormat",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "NumberFormatter"
                }
              }
            },
            {
              "kind": "field",
              "name": "numberFormat",
              "type": {
                "text": "NumberFormatter | undefined"
              },
              "privacy": "public",
              "readonly": true
            }
          ],
          "events": [
            {
              "name": "sp-slider-handle-ready",
              "type": {
                "text": "CustomEvent"
              }
            },
            {
              "description": "The value of the element has changed.",
              "name": "input"
            },
            {
              "description": "An alteration to the value of the element has been committed by the user.",
              "name": "change"
            }
          ],
          "attributes": [
            {
              "name": "value",
              "type": {
                "text": "number"
              },
              "description": "By default, the value of a Slider Handle will be halfway between its\n`min` and `max` values, or the `min` value when `max` is less than `min`.",
              "fieldName": "value"
            },
            {
              "name": "dragging",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "dragging"
            },
            {
              "name": "highlight",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "highlight"
            },
            {
              "name": "name",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "name"
            },
            {
              "name": "min",
              "type": {
                "text": "number | 'previous' | undefined"
              },
              "fieldName": "min"
            },
            {
              "name": "max",
              "type": {
                "text": "number | 'next' | undefined"
              },
              "fieldName": "max"
            },
            {
              "name": "step",
              "type": {
                "text": "number | undefined"
              },
              "fieldName": "step"
            },
            {
              "name": "format-options",
              "type": {
                "text": "NumberFormatOptions | undefined"
              },
              "fieldName": "formatOptions"
            },
            {
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "label"
            }
          ],
          "superclass": {
            "name": "Focusable",
            "package": "@spectrum-web-components/shared/src/focusable.js"
          },
          "tagName": "sp-slider-handle",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "defaultNormalization",
          "declaration": {
            "name": "defaultNormalization",
            "module": "src/SliderHandle.js"
          }
        },
        {
          "kind": "js",
          "name": "SliderHandle",
          "declaration": {
            "name": "SliderHandle",
            "module": "src/SliderHandle.js"
          }
        }
      ]
    }
  ]
}
