var u=Object.defineProperty;var a=Object.getOwnPropertyDescriptor;var n=(i,t,c,l)=>{for(var e=l>1?void 0:l?a(t,c):t,r=i.length-1,p;r>=0;r--)(p=i[r])&&(e=(l?p(t,c,e):p(e))||e);return l&&e&&u(t,c,e),e};import{html as d}from"@spectrum-web-components/base";import{property as h,query as s}from"@spectrum-web-components/base/src/decorators.js";import{Focusable as o}from"@spectrum-web-components/shared/src/focusable.js";export class CheckboxBase extends o{constructor(){super(...arguments);this.checked=!1;this.readonly=!1}get focusElement(){return this.inputElement}handleChange(){if(this.readonly){this.inputElement.checked=this.checked;return}this.checked=this.inputElement.checked;const t=new CustomEvent("change",{bubbles:!0,cancelable:!0,composed:!0});this.dispatchEvent(t)||(this.checked=!this.inputElement.checked,this.inputElement.checked=this.checked)}render(){return d`
            <input
                id="input"
                aria-labelledby="label"
                type="checkbox"
                .checked=${this.checked}
                @change=${this.handleChange}
            />
        `}}n([h({type:Boolean,reflect:!0})],CheckboxBase.prototype,"checked",2),n([h({type:Boolean,reflect:!0})],CheckboxBase.prototype,"readonly",2),n([s("#input")],CheckboxBase.prototype,"inputElement",2);
//# sourceMappingURL=CheckboxBase.js.map
