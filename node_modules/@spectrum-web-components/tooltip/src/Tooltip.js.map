{
  "version": 3,
  "sources": ["Tooltip.ts"],
  "sourcesContent": ["/*\nCopyright 2020 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\n\nimport {\n    CSSResultArray,\n    html,\n    PropertyValues,\n    SpectrumElement,\n    TemplateResult,\n} from '@spectrum-web-components/base';\nimport {\n    property,\n    query,\n} from '@spectrum-web-components/base/src/decorators.js';\nimport type {\n    OverlayDisplayQueryDetail,\n    Placement,\n} from '@spectrum-web-components/overlay';\nimport { openOverlay } from '@spectrum-web-components/overlay/src/loader.js';\n\nimport tooltipStyles from './tooltip.css.js';\n\nexport class TooltipProxy extends HTMLElement {\n    disconnectedCallback(): void {\n        this.dispatchEvent(new Event('disconnected'));\n    }\n}\n\ncustomElements.define('tooltip-proxy', TooltipProxy);\n\n/**\n * @element sp-tooltip\n *\n * @slot icon - the icon element appearing at the start of the label\n * @slot - the text label of the Tooltip\n */\n\nexport class Tooltip extends SpectrumElement {\n    public static override get styles(): CSSResultArray {\n        return [tooltipStyles];\n    }\n\n    /**\n     * @private\n     */\n    static instanceCount = 0;\n\n    private _tooltipId = `sp-tooltip-describedby-helper-${Tooltip.instanceCount++}`;\n\n    @property({ type: Boolean, attribute: 'self-managed' })\n    public selfManaged = false;\n\n    @property({ type: Number, reflect: true })\n    public offset = 6;\n    private hadTooltipId = false;\n\n    @property({ type: Boolean, reflect: true })\n    public open = false;\n\n    /**\n     * @type {\"auto\" | \"auto-start\" | \"auto-end\" | \"top\" | \"bottom\" | \"right\" | \"left\" | \"top-start\" | \"top-end\" | \"bottom-start\" | \"bottom-end\" | \"right-start\" | \"right-end\" | \"left-start\" | \"left-end\" | \"none\"}\n     * @attr\n     */\n    @property({ reflect: true })\n    public placement: Placement = 'top';\n\n    @query('#tip')\n    private tipElement!: HTMLSpanElement;\n\n    /* Ensure that a '' value for `variant` removes the attribute instead of a blank value */\n    private _variant = '';\n\n    @property({ type: String })\n    public get variant(): string {\n        return this._variant;\n    }\n    public set variant(variant: string) {\n        if (variant === this.variant) {\n            return;\n        }\n        if (['info', 'positive', 'negative'].includes(variant)) {\n            this.setAttribute('variant', variant);\n            this._variant = variant;\n            return;\n        }\n        this.removeAttribute('variant');\n        this._variant = '';\n    }\n\n    public constructor() {\n        super();\n        this.addEventListener('sp-overlay-query', this.onOverlayQuery);\n    }\n\n    public onOverlayQuery(event: CustomEvent<OverlayDisplayQueryDetail>): void {\n        /* c8 ignore next */\n        if (!event.target) return;\n\n        const target = event.target as Node;\n        /* c8 ignore next */\n        if (target !== this) return;\n\n        event.detail.overlayContentTipElement = this.tipElement;\n    }\n\n    private _proxy!: HTMLElement;\n\n    private generateProxy(): void {\n        if (this._proxy) {\n            return;\n        }\n        this._proxy = document.createElement('tooltip-proxy');\n        this._proxy.id = this._tooltipId;\n        this._proxy.hidden = true;\n        this._proxy.slot = 'hidden-tooltip-content';\n        this._proxy.setAttribute('role', 'tooltip');\n        this._proxy.addEventListener('disconnected', this.closeOverlay);\n    }\n\n    public overlayWillOpenCallback({\n        trigger,\n    }: {\n        trigger: HTMLElement;\n    }): void {\n        this.setAttribute('aria-hidden', 'true');\n        this.generateProxy();\n        this._proxy.textContent = this.textContent;\n        const ariaDescribedby = trigger.getAttribute('aria-describedby') || '';\n        this.hadTooltipId = ariaDescribedby.search(this._tooltipId) > -1;\n\n        this.insertAdjacentElement('beforebegin', this._proxy);\n\n        if (this.hadTooltipId) return;\n\n        if (ariaDescribedby) {\n            trigger.setAttribute(\n                'aria-describedby',\n                `${ariaDescribedby} ${this._tooltipId}`\n            );\n        } else {\n            trigger.setAttribute('aria-describedby', `${this._tooltipId}`);\n        }\n    }\n\n    public overlayOpenCancelledCallback({\n        trigger,\n    }: {\n        trigger: HTMLElement;\n    }): void {\n        this.overlayCloseCallback({ trigger });\n    }\n\n    public overlayCloseCallback({ trigger }: { trigger: HTMLElement }): void {\n        const ariaDescribedby = trigger.getAttribute('aria-describedby') || '';\n        let descriptors = ariaDescribedby.split(/\\s+/);\n\n        if (!this.hadTooltipId) {\n            descriptors = descriptors.filter(\n                (descriptor) => descriptor !== this._tooltipId\n            );\n        }\n        if (descriptors.length) {\n            trigger.setAttribute('aria-describedby', descriptors.join(' '));\n        } else {\n            trigger.removeAttribute('aria-describedby');\n        }\n\n        this.removeAttribute('aria-hidden');\n        this.removeProxy();\n    }\n\n    private removeProxy(): void {\n        this._proxy.remove();\n    }\n\n    private closeOverlayCallback?: Promise<() => void>;\n    private abortOverlay: (cancelled: boolean) => void = () => {\n        return;\n    };\n\n    private openOverlay = (): void => {\n        const parentElement = this.parentElement as HTMLElement;\n        const abortPromise: Promise<boolean> = new Promise((res) => {\n            this.abortOverlay = res;\n        });\n        this.closeOverlayCallback = openOverlay(parentElement, 'hover', this, {\n            abortPromise,\n            offset: this.offset,\n            placement: this.placement,\n        });\n    };\n\n    private closeOverlay = async (\n        event?: PointerEvent | FocusEvent | Event\n    ): Promise<void> => {\n        const pointerIsEnteringTooltip =\n            event &&\n            event.type === 'pointerleave' &&\n            (event as PointerEvent).relatedTarget === this;\n        if (pointerIsEnteringTooltip) {\n            this.addEventListener(\n                'pointerleave',\n                (event: PointerEvent) => {\n                    const pointerIsEnteringParnet =\n                        event.relatedTarget === this.parentElement;\n                    if (pointerIsEnteringParnet) {\n                        return;\n                    }\n                    this.closeOverlay(event);\n                },\n                { once: true }\n            );\n            return;\n        }\n        if (this.abortOverlay) this.abortOverlay(true);\n        if (!this.closeOverlayCallback) return;\n        (await this.closeOverlayCallback)();\n        delete this.closeOverlayCallback;\n    };\n\n    private previousSlot?: string;\n\n    private manageTooltip(): void {\n        const parentElement = this.parentElement as HTMLElement;\n        if (this.selfManaged) {\n            if (this.slot) {\n                this.previousSlot = this.slot;\n            }\n            this.slot = 'self-managed-tooltip';\n            parentElement.addEventListener('pointerenter', this.openOverlay);\n            parentElement.addEventListener('focusin', this.openOverlay);\n            parentElement.addEventListener('pointerleave', this.closeOverlay);\n            parentElement.addEventListener('focusout', this.closeOverlay);\n        } else {\n            if (this.previousSlot) {\n                this.slot = this.previousSlot;\n            } else if (this.slot === 'self-managed-tooltip') {\n                this.removeAttribute('slot');\n            }\n            parentElement.removeEventListener('pointerenter', this.openOverlay);\n            parentElement.removeEventListener('focusin', this.openOverlay);\n            parentElement.removeEventListener(\n                'pointerleave',\n                this.closeOverlay\n            );\n            parentElement.removeEventListener('focusout', this.closeOverlay);\n        }\n    }\n\n    override render(): TemplateResult {\n        return html`\n            <slot name=\"icon\"></slot>\n            <span id=\"label\"><slot></slot></span>\n            <span id=\"tip\"></span>\n        `;\n    }\n\n    protected override async update(\n        changed: PropertyValues<this>\n    ): Promise<void> {\n        if (changed.has('open') && this.selfManaged) {\n            if (this.open) {\n                this.openOverlay();\n            } else {\n                this.closeOverlay();\n            }\n        }\n        this.generateProxy();\n        super.update(changed);\n    }\n\n    protected override updated(changed: PropertyValues<this>): void {\n        super.updated(changed);\n        if (changed.has('selfManaged')) {\n            this.manageTooltip();\n        }\n    }\n}\n"],
  "mappings": "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",
  "names": ["html", "SpectrumElement", "property", "query", "openOverlay", "tooltipStyles", "_Tooltip", "parentElement", "abortPromise", "res", "event", "variant", "trigger", "ariaDescribedby", "descriptors", "descriptor", "changed", "__decorateClass"]
}
