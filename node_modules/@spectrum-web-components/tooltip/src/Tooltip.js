"use strict";var d=Object.defineProperty;var v=Object.getOwnPropertyDescriptor;var r=(l,o,e,i)=>{for(var t=i>1?void 0:i?v(o,e):o,s=l.length-1,n;s>=0;s--)(n=l[s])&&(t=(i?n(o,e,t):n(t))||t);return i&&t&&d(o,e,t),t};import{html as c,SpectrumElement as h}from"@spectrum-web-components/base";import{property as a,query as y}from"@spectrum-web-components/base/src/decorators.js";import{openOverlay as u}from"@spectrum-web-components/overlay/src/loader.js";import m from"./tooltip.css.js";export class TooltipProxy extends HTMLElement{disconnectedCallback(){this.dispatchEvent(new Event("disconnected"))}}customElements.define("tooltip-proxy",TooltipProxy);const p=class extends h{constructor(){super();this._tooltipId=`sp-tooltip-describedby-helper-${p.instanceCount++}`;this.selfManaged=!1;this.offset=6;this.hadTooltipId=!1;this.open=!1;this.placement="top";this._variant="";this.abortOverlay=()=>{};this.openOverlay=()=>{const e=this.parentElement,i=new Promise(t=>{this.abortOverlay=t});this.closeOverlayCallback=u(e,"hover",this,{abortPromise:i,offset:this.offset,placement:this.placement})};this.closeOverlay=async e=>{if(e&&e.type==="pointerleave"&&e.relatedTarget===this){this.addEventListener("pointerleave",t=>{t.relatedTarget!==this.parentElement&&this.closeOverlay(t)},{once:!0});return}this.abortOverlay&&this.abortOverlay(!0),this.closeOverlayCallback&&((await this.closeOverlayCallback)(),delete this.closeOverlayCallback)};this.addEventListener("sp-overlay-query",this.onOverlayQuery)}static get styles(){return[m]}get variant(){return this._variant}set variant(e){if(e!==this.variant){if(["info","positive","negative"].includes(e)){this.setAttribute("variant",e),this._variant=e;return}this.removeAttribute("variant"),this._variant=""}}onOverlayQuery(e){!e.target||e.target!==this||(e.detail.overlayContentTipElement=this.tipElement)}generateProxy(){this._proxy||(this._proxy=document.createElement("tooltip-proxy"),this._proxy.id=this._tooltipId,this._proxy.hidden=!0,this._proxy.slot="hidden-tooltip-content",this._proxy.setAttribute("role","tooltip"),this._proxy.addEventListener("disconnected",this.closeOverlay))}overlayWillOpenCallback({trigger:e}){this.setAttribute("aria-hidden","true"),this.generateProxy(),this._proxy.textContent=this.textContent;const i=e.getAttribute("aria-describedby")||"";this.hadTooltipId=i.search(this._tooltipId)>-1,this.insertAdjacentElement("beforebegin",this._proxy),!this.hadTooltipId&&(i?e.setAttribute("aria-describedby",`${i} ${this._tooltipId}`):e.setAttribute("aria-describedby",`${this._tooltipId}`))}overlayOpenCancelledCallback({trigger:e}){this.overlayCloseCallback({trigger:e})}overlayCloseCallback({trigger:e}){let t=(e.getAttribute("aria-describedby")||"").split(/\s+/);this.hadTooltipId||(t=t.filter(s=>s!==this._tooltipId)),t.length?e.setAttribute("aria-describedby",t.join(" ")):e.removeAttribute("aria-describedby"),this.removeAttribute("aria-hidden"),this.removeProxy()}removeProxy(){this._proxy.remove()}manageTooltip(){const e=this.parentElement;this.selfManaged?(this.slot&&(this.previousSlot=this.slot),this.slot="self-managed-tooltip",e.addEventListener("pointerenter",this.openOverlay),e.addEventListener("focusin",this.openOverlay),e.addEventListener("pointerleave",this.closeOverlay),e.addEventListener("focusout",this.closeOverlay)):(this.previousSlot?this.slot=this.previousSlot:this.slot==="self-managed-tooltip"&&this.removeAttribute("slot"),e.removeEventListener("pointerenter",this.openOverlay),e.removeEventListener("focusin",this.openOverlay),e.removeEventListener("pointerleave",this.closeOverlay),e.removeEventListener("focusout",this.closeOverlay))}render(){return c`
            <slot name="icon"></slot>
            <span id="label"><slot></slot></span>
            <span id="tip"></span>
        `}async update(e){e.has("open")&&this.selfManaged&&(this.open?this.openOverlay():this.closeOverlay()),this.generateProxy(),super.update(e)}updated(e){super.updated(e),e.has("selfManaged")&&this.manageTooltip()}};export let Tooltip=p;Tooltip.instanceCount=0,r([a({type:Boolean,attribute:"self-managed"})],Tooltip.prototype,"selfManaged",2),r([a({type:Number,reflect:!0})],Tooltip.prototype,"offset",2),r([a({type:Boolean,reflect:!0})],Tooltip.prototype,"open",2),r([a({reflect:!0})],Tooltip.prototype,"placement",2),r([y("#tip")],Tooltip.prototype,"tipElement",2),r([a({type:String})],Tooltip.prototype,"variant",1);
//# sourceMappingURL=Tooltip.js.map
