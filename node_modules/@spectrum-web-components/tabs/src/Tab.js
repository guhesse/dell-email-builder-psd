"use strict";var c=Object.defineProperty;var b=Object.getOwnPropertyDescriptor;var l=(u,r,e,o)=>{for(var s=o>1?void 0:o?b(r,e):r,a=u.length-1,d;a>=0;a--)(d=u[a])&&(s=(o?d(r,e,s):d(s))||s);return o&&s&&c(r,e,s),s};import{html as n,nothing as p,SpectrumElement as h}from"@spectrum-web-components/base";import{property as i}from"@spectrum-web-components/base/src/decorators.js";import{FocusVisiblePolyfillMixin as f,ObserveSlotPresence as m,ObserveSlotText as y}from"@spectrum-web-components/shared";import v from"./tab.css.js";const t=class t extends f(y(m(h,'[slot="icon"]'),"")){constructor(){super(...arguments);this.disabled=!1;this.label="";this.selected=!1;this.vertical=!1;this.value=""}static get styles(){return[v]}get hasIcon(){return this.slotContentIsPresent}get hasLabel(){return!!this.label||this.slotHasContent}render(){return n`
            ${this.hasIcon?n`
                      <slot name="icon"></slot>
                  `:p}
            <label id="item-label" ?hidden=${!this.hasLabel}>
                ${this.slotHasContent?p:this.label}
                <slot>${this.label}</slot>
            </label>
        `}firstUpdated(e){super.firstUpdated(e),this.setAttribute("role","tab"),this.hasAttribute("id")||(this.id=`sp-tab-${t.instanceCount++}`)}updated(e){super.updated(e),e.has("selected")&&(this.setAttribute("aria-selected",this.selected?"true":"false"),this.setAttribute("tabindex",this.selected?"0":"-1")),e.has("disabled")&&(this.disabled?this.setAttribute("aria-disabled","true"):this.removeAttribute("aria-disabled"))}};t.instanceCount=0,l([i({type:Boolean,reflect:!0})],t.prototype,"disabled",2),l([i({reflect:!0})],t.prototype,"label",2),l([i({type:Boolean,reflect:!0})],t.prototype,"selected",2),l([i({type:Boolean,reflect:!0})],t.prototype,"vertical",2),l([i({type:String,reflect:!0})],t.prototype,"value",2);export let Tab=t;
//# sourceMappingURL=Tab.js.map
