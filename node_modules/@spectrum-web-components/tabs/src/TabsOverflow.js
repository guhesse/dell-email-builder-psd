"use strict";var p=Object.defineProperty;var h=Object.getOwnPropertyDescriptor;var s=(i,c,t,e)=>{for(var o=e>1?void 0:e?h(c,t):c,r=i.length-1,l;r>=0;r--)(l=i[r])&&(o=(e?l(c,t,o):l(o))||o);return e&&o&&p(c,t,o),o};import{html as u,SizedMixin as d,SpectrumElement as S}from"@spectrum-web-components/base";import{property as n,query as f,queryAssignedElements as v,state as m}from"@spectrum-web-components/base/src/decorators.js";import{classMap as a}from"@spectrum-web-components/base/src/directives.js";import{ResizeController as C}from"@lit-labs/observers/resize-controller.js";import"@spectrum-web-components/action-button/sp-action-button.js";import"@spectrum-web-components/icons-ui/icons/sp-icon-chevron100.js";import b from"@spectrum-web-components/icon/src/spectrum-icon-chevron.css.js";import g from"./tabs-sizes.css.js";import y from"./tabs-overflow.css.js";export class TabsOverflow extends d(S){constructor(){super();this.compact=!1;this.overflowState={canScrollLeft:!1,canScrollRight:!1};this.resizeController=new C(this,{target:this,callback:()=>{this._updateScrollState()}})}static get styles(){return[b,y,g]}firstUpdated(t){super.firstUpdated(t);const[e]=this.scrollContent;e&&(e.enableTabsScroll=!0),this.resizeController.observe(this.overflowContainer)}async _handleSlotChange(){const[t]=this.scrollContent;await(t==null?void 0:t.updateComplete),this._updateScrollState()}_updateScrollState(){const{scrollContent:t,overflowState:e}=this;if(t){const[o]=this.scrollContent,{canScrollLeft:r,canScrollRight:l}=(o==null?void 0:o.scrollState)||{canScrollLeft:!1,canScrollRight:!1};this.overflowState={...e,canScrollLeft:r,canScrollRight:l}}}_handleScrollClick(t){const e=t.currentTarget,[o]=this.scrollContent,r=o.clientWidth*.5,l=e.classList.contains("left-scroll")?-r:r;o.scrollTabs(l,"smooth")}updated(t){super.updated(t),t.has("dir")&&this._updateScrollState()}render(){const{canScrollRight:t,canScrollLeft:e}=this.overflowState;return u`
            <div
                class=${a({"tabs-overflow-container":!0,"left-shadow":e,"right-shadow":t})}
            >
                <sp-action-button
                    class=${a({"left-scroll":!0,show:e})}
                    quiet
                    dir="rtl"
                    @click=${this._handleScrollClick}
                >
                    <sp-icon-chevron100
                        slot="icon"
                        class="spectrum-UIIcon-ChevronLeft300"
                    ></sp-icon-chevron100>
                </sp-action-button>
                <sp-action-button
                    class=${a({"right-scroll":!0,show:t})}
                    quiet
                    @click=${this._handleScrollClick}
                >
                    <sp-icon-chevron100
                        slot="icon"
                        class="spectrum-UIIcon-ChevronRight300"
                    ></sp-icon-chevron100>
                </sp-action-button>
                <slot
                    @slotchange=${this._handleSlotChange}
                    @sp-tabs-scroll=${this._updateScrollState}
                ></slot>
            </div>
        `}}s([n({type:Boolean,reflect:!0})],TabsOverflow.prototype,"compact",2),s([n({reflect:!0})],TabsOverflow.prototype,"dir",2),s([m()],TabsOverflow.prototype,"overflowState",2),s([v({selector:"sp-tabs",flatten:!0})],TabsOverflow.prototype,"scrollContent",2),s([f(".tabs-overflow-container")],TabsOverflow.prototype,"overflowContainer",2);
//# sourceMappingURL=TabsOverflow.js.map
