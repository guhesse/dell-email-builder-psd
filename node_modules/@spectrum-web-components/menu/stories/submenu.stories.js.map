{
  "version": 3,
  "sources": ["submenu.stories.ts"],
  "sourcesContent": ["/*\nCopyright 2020 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\n\nimport { html, render, TemplateResult } from '@spectrum-web-components/base';\n\nimport '@spectrum-web-components/action-menu/sp-action-menu.js';\nimport '@spectrum-web-components/menu/sp-menu-item.js';\nimport '@spectrum-web-components/menu/sp-menu-divider.js';\nimport '@spectrum-web-components/menu/sp-menu-group.js';\nimport { openOverlay, VirtualTrigger } from '@spectrum-web-components/overlay';\nimport type { Popover } from '@spectrum-web-components/popover';\nimport '@spectrum-web-components/popover/sp-popover.js';\nimport '@spectrum-web-components/icons-workflow/icons/sp-icon-show-menu.js';\nimport type { ActionMenu } from '@spectrum-web-components/action-menu';\nimport type { Menu, MenuItem } from '@spectrum-web-components/menu';\n\nexport default {\n    component: 'sp-menu',\n    title: 'Menu/Submenu',\n};\n\nfunction nextFrame(): Promise<void> {\n    return new Promise((res) => requestAnimationFrame(() => res()));\n}\n\nclass SubmenuReady extends HTMLElement {\n    ready!: (value: boolean | PromiseLike<boolean>) => void;\n\n    constructor() {\n        super();\n        this.readyPromise = new Promise((res) => {\n            this.ready = res;\n            this.setup();\n        });\n    }\n\n    async setup(): Promise<void> {\n        await nextFrame();\n\n        const menu = document.querySelector(`sp-action-menu`) as ActionMenu;\n        menu.addEventListener('sp-opened', this.handleMenuOpened, {\n            once: true,\n        });\n        menu.open = true;\n    }\n\n    handleMenuOpened = async (event: Event): Promise<void> => {\n        await nextFrame();\n        await (event.target as ActionMenu).updateComplete;\n\n        const submenu = document.querySelector('#submenu-item-1') as MenuItem;\n        if (!submenu) {\n            return;\n        }\n        submenu.addEventListener('sp-opened', this.handleSubmenuOpened, {\n            once: true,\n        });\n        submenu.dispatchEvent(\n            new PointerEvent('pointerenter', { bubbles: true, composed: true })\n        );\n    };\n\n    handleSubmenuOpened = async (event: Event): Promise<void> => {\n        await nextFrame();\n        await (event.target as MenuItem).updateComplete;\n\n        const submenu = document.querySelector('#submenu-item-2') as MenuItem;\n        if (!submenu) {\n            return;\n        }\n        submenu.addEventListener('sp-opened', this.handleSubmenuChildOpened, {\n            once: true,\n        });\n        submenu.dispatchEvent(\n            new PointerEvent('pointerenter', { bubbles: true, composed: true })\n        );\n    };\n\n    handleSubmenuChildOpened = async (event: Event): Promise<void> => {\n        await nextFrame();\n        await (event.target as MenuItem).updateComplete;\n\n        this.ready(true);\n    };\n\n    private readyPromise: Promise<boolean> = Promise.resolve(false);\n\n    get updateComplete(): Promise<boolean> {\n        return this.readyPromise;\n    }\n}\n\ncustomElements.define('submenu-ready', SubmenuReady);\n\nconst submenuDecorator = (story: () => TemplateResult): TemplateResult => {\n    return html`\n        ${story()}\n        <submenu-ready></submenu-ready>\n    `;\n};\n\nexport const submenu = (): TemplateResult => {\n    const getValueEls = (): {\n        root: HTMLElement;\n        first: HTMLElement;\n        second: HTMLElement;\n    } => {\n        return {\n            root: document.querySelector('#root-value') as HTMLElement,\n            first: document.querySelector('#first-value') as HTMLElement,\n            second: document.querySelector('#second-value') as HTMLElement,\n        };\n    };\n    const clearValues = (): void => {\n        const valueEls = getValueEls();\n        valueEls.root.textContent = '';\n        valueEls.first.textContent = '';\n        valueEls.second.textContent = '';\n    };\n    const handleRootChange = (event: Event & { target: ActionMenu }): void => {\n        const valueEls = getValueEls();\n        valueEls.root.textContent = event.target.value;\n    };\n    const handleFirstDescendantChange = (\n        event: Event & { target: Menu }\n    ): void => {\n        const valueEls = getValueEls();\n        valueEls.first.textContent = event.target.selected[0] || '';\n    };\n    const handleSecondDescendantChange = (\n        event: Event & { target: Menu }\n    ): void => {\n        const valueEls = getValueEls();\n        valueEls.second.textContent = event.target.selected[0] || '';\n    };\n    return html`\n        <sp-action-menu @change=${handleRootChange} @sp-opened=${clearValues}>\n            <sp-icon-show-menu slot=\"icon\"></sp-icon-show-menu>\n            <sp-menu-group\n                @change=${() => console.log('group change')}\n                role=\"none\"\n            >\n                <span slot=\"header\">New York</span>\n                <sp-menu-item>Bronx</sp-menu-item>\n                <sp-menu-item id=\"submenu-item-1\">\n                    Brooklyn\n                    <sp-menu\n                        slot=\"submenu\"\n                        @change=${handleFirstDescendantChange}\n                    >\n                        <sp-menu-item id=\"submenu-item-2\">\n                            Ft. Greene\n                            <sp-menu\n                                slot=\"submenu\"\n                                @change=${handleSecondDescendantChange}\n                            >\n                                <sp-menu-item>S. Oxford St</sp-menu-item>\n                                <sp-menu-item>S. Portland Ave</sp-menu-item>\n                                <sp-menu-item>S. Elliot Pl</sp-menu-item>\n                            </sp-menu>\n                        </sp-menu-item>\n                        <sp-menu-item disabled>Park Slope</sp-menu-item>\n                        <sp-menu-item>Williamsburg</sp-menu-item>\n                    </sp-menu>\n                </sp-menu-item>\n                <sp-menu-item>\n                    Manhattan\n                    <sp-menu\n                        slot=\"submenu\"\n                        @change=${handleFirstDescendantChange}\n                    >\n                        <sp-menu-item disabled>SoHo</sp-menu-item>\n                        <sp-menu-item>\n                            Union Square\n                            <sp-menu\n                                slot=\"submenu\"\n                                @change=${handleSecondDescendantChange}\n                            >\n                                <sp-menu-item>14th St</sp-menu-item>\n                                <sp-menu-item>Broadway</sp-menu-item>\n                                <sp-menu-item>Park Ave</sp-menu-item>\n                            </sp-menu>\n                        </sp-menu-item>\n                        <sp-menu-item>Upper East Side</sp-menu-item>\n                    </sp-menu>\n                </sp-menu-item>\n            </sp-menu-group>\n        </sp-action-menu>\n        <div>\n            Root value:\n            <span id=\"root-value\"></span>\n            <br />\n            First descendant value:\n            <span id=\"first-value\"></span>\n            <br />\n            Second descendant value:\n            <span id=\"second-value\"></span>\n            <br />\n        </div>\n    `;\n};\n\nsubmenu.decorators = [submenuDecorator];\n\nexport const contextMenu = (): TemplateResult => {\n    const contextMenuTemplate = (): TemplateResult => html`\n        <sp-popover\n            style=\"max-width: 33vw;\"\n            @click=${(event: Event) =>\n                event.target?.dispatchEvent(\n                    new Event('close', { bubbles: true })\n                )}\n        >\n            <sp-menu @change=${handleRootChange}>\n                <sp-menu-group>\n                    <span slot=\"header\">Options</span>\n                    <sp-menu-item>\n                        Copy\n                        <span slot=\"value\">\u2318\u200BS</span>\n                    </sp-menu-item>\n                    <sp-menu-item>\n                        Paste\n                        <span slot=\"value\">\u2318\u200BP</span>\n                    </sp-menu-item>\n                    <sp-menu-item>\n                        Cut\n                        <span slot=\"value\">\u2318\u200BX</span>\n                    </sp-menu-item>\n                    <sp-menu-divider></sp-menu-divider>\n                    <sp-menu-item>\n                        Select layer\n                        <sp-menu\n                            slot=\"submenu\"\n                            selects=\"single\"\n                            @change=${handleFirstDescendantChange}\n                        >\n                            <sp-menu-item selected>Ellipse 1</sp-menu-item>\n                            <sp-menu-item>Rectangle</sp-menu-item>\n                        </sp-menu>\n                    </sp-menu-item>\n                    <sp-menu-item>\n                        Group\n                        <span slot=\"value\">\u2318\u200BG</span>\n                    </sp-menu-item>\n                    <sp-menu-item>\n                        Unlock\n                        <span slot=\"value\">\u2318\u200BL</span>\n                    </sp-menu-item>\n                    <sp-menu-divider></sp-menu-divider>\n                    <sp-menu-item>\n                        Bring to front\n                        <span slot=\"value\">\u21E7\u200B\u2318\u200B\u200B]</span>\n                    </sp-menu-item>\n                    <sp-menu-item>\n                        Bring forward\n                        <span slot=\"value\">\u2318\u200B\u200B]</span>\n                    </sp-menu-item>\n                    <sp-menu-item>\n                        Send backward\n                        <span slot=\"value\">\u2318\u200B\u200B[</span>\n                    </sp-menu-item>\n                    <sp-menu-item>\n                        Send to back\n                        <span slot=\"value\">\u21E7\u200B\u2318\u200B\u200B[</span>\n                    </sp-menu-item>\n                    <sp-menu-divider></sp-menu-divider>\n                    <sp-menu-item>\n                        Delete\n                        <span slot=\"value\">DEL</span>\n                    </sp-menu-item>\n                </sp-menu-group>\n            </sp-menu>\n        </sp-popover>\n    `;\n    const pointerenter = async (event: PointerEvent): Promise<void> => {\n        event.preventDefault();\n        const trigger = event.target as HTMLElement;\n        const virtualTrigger = new VirtualTrigger(event.clientX, event.clientY);\n        const fragment = document.createDocumentFragment();\n        render(contextMenuTemplate(), fragment);\n        const popover = fragment.querySelector('sp-popover') as Popover;\n        clearValues();\n        openOverlay(trigger, 'modal', popover, {\n            placement: 'right-start',\n            receivesFocus: 'auto',\n            virtualTrigger,\n        });\n    };\n    const getValueEls = (): { root: HTMLElement; first: HTMLElement } => {\n        return {\n            root: document.querySelector('#root-value') as HTMLElement,\n            first: document.querySelector('#first-value') as HTMLElement,\n        };\n    };\n    const clearValues = (): void => {\n        const valueEls = getValueEls();\n        valueEls.root.textContent = '';\n        valueEls.first.textContent = '';\n    };\n    const handleRootChange = (event: Event & { target: ActionMenu }): void => {\n        const valueEls = getValueEls();\n        valueEls.root.textContent = event.target.value;\n    };\n    const handleFirstDescendantChange = (\n        event: Event & { target: Menu }\n    ): void => {\n        const valueEls = getValueEls();\n        valueEls.first.textContent = event.target.selected[0] || '';\n    };\n    return html`\n        <style>\n            .app-root {\n                position: absolute;\n                inset: 0;\n            }\n            active-overlay::part(theme) {\n                --swc-menu-width: 200px;\n            }\n        </style>\n        <div class=\"app-root\" @contextmenu=${pointerenter}>\n            <div>\n                Root value:\n                <span id=\"root-value\"></span>\n                <br />\n                First descendant value:\n                <span id=\"first-value\"></span>\n                <br />\n            </div>\n        </div>\n    `;\n};\n"],
  "mappings": "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",
  "names": ["submenu"]
}
