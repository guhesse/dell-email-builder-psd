"use strict";import{firstFocusableIn as d,firstFocusableSlottedIn as m}from"@spectrum-web-components/shared/src/first-focusable-in.js";import{VirtualTrigger as u}from"./VirtualTrigger.js";import{BeforetoggleClosedEvent as h,BeforetoggleOpenEvent as f,guaranteedAllTransitionend as E}from"./AbstractOverlay.js";import{userFocusableSelector as v}from"@spectrum-web-components/shared";export function OverlayDialog(a){class c extends a{async manageDialogOpen(){const e=this.open;if(await this.managePosition(),this.open!==e||this.open!==e)return;const o=await this.dialogMakeTransition(e);this.open===e&&await this.dialogApplyFocus(e,o)}async dialogMakeTransition(e){let o=null;const p=(t,s)=>async()=>{if(typeof t.open!="undefined"&&(t.open=e),!e){const i=()=>{t.removeEventListener("close",i),l(t,s)};t.addEventListener("close",i)}if(s>0)return;const n=e?f:h;this.dispatchEvent(new n),e&&(t.matches(v)&&(o=t),o=o||d(t),o||t.querySelectorAll("slot").forEach(r=>{o||(o=m(r))}),!(!this.isConnected||this.dialogEl.open)&&this.dialogEl.showModal())},l=(t,s)=>()=>{if(this.open!==e)return;const n=e?"sp-opened":"sp-closed";if(s>0){t.dispatchEvent(new CustomEvent(n,{bubbles:!1,composed:!1,detail:{interaction:this.type}}));return}if(!this.isConnected||e!==this.open)return;const i=()=>{const r=this.triggerElement instanceof u;this.dispatchEvent(new Event(n,{bubbles:r,composed:r})),t.dispatchEvent(new Event(n,{bubbles:!1,composed:!1})),this.triggerElement&&!r&&this.triggerElement.dispatchEvent(new CustomEvent(n,{bubbles:!0,composed:!0,detail:{interaction:this.type}})),this.state=e?"opened":"closed"};!e&&this.dialogEl.open?(this.dialogEl.addEventListener("close",()=>{i()},{once:!0}),this.dialogEl.close()):i()};return this.elements.forEach((t,s)=>{E(t,p(t,s),l(t,s))}),o}async dialogApplyFocus(e,o){this.applyFocus(e,o)}}return c}
//# sourceMappingURL=OverlayDialog.js.map
