{
  "version": 3,
  "sources": ["topLayerOverTransforms.ts"],
  "sourcesContent": ["/*\nCopyright 2022 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\nimport type { Middleware, MiddlewareState } from '@floating-ui/dom';\nimport {\n    getContainingBlock,\n    getWindow,\n    isContainingBlock,\n} from '@floating-ui/utils/dom';\nimport { VirtualTrigger } from './VirtualTrigger.dev.js'\n\nexport const topLayerOverTransforms = (): Middleware => ({\n    name: 'topLayer',\n    async fn(middlewareArguments: MiddlewareState) {\n        const {\n            x,\n            y,\n            elements: { reference, floating },\n        } = middlewareArguments;\n        let onTopLayer = false;\n        let topLayerIsFloating = false;\n        let withinReference = false;\n        const diffCoords = {\n            x: 0,\n            y: 0,\n        };\n        try {\n            onTopLayer = onTopLayer || floating.matches(':popover-open');\n            // eslint-disable-next-line no-empty\n        } catch (error) {}\n        try {\n            onTopLayer = onTopLayer || floating.matches(':open');\n            // eslint-disable-next-line no-empty\n        } catch (error) {}\n        try {\n            onTopLayer = onTopLayer || floating.matches(':modal');\n            // eslint-disable-next-line no-empty\n            /* c8 ignore next 3 */\n        } catch (error) {}\n        topLayerIsFloating = onTopLayer;\n        const dialogAncestorQueryEvent = new Event('floating-ui-dialog-test', {\n            composed: true,\n            bubbles: true,\n        });\n        floating.addEventListener(\n            'floating-ui-dialog-test',\n            (event: Event) => {\n                (event.composedPath() as unknown as Element[]).forEach((el) => {\n                    withinReference = withinReference || el === reference;\n                    if (el === floating || el.localName !== 'dialog') return;\n                    try {\n                        onTopLayer = onTopLayer || el.matches(':modal');\n                        // eslint-disable-next-line no-empty\n                        /* c8 ignore next */\n                    } catch (error) {}\n                });\n            },\n            { once: true }\n        );\n        floating.dispatchEvent(dialogAncestorQueryEvent);\n        let overTransforms = false;\n        if (!(reference instanceof VirtualTrigger)) {\n            const root = (withinReference ? reference : floating) as Element;\n            const containingBlock = isContainingBlock(root)\n                ? root\n                : getContainingBlock(root);\n            if (\n                containingBlock !== null &&\n                getWindow(containingBlock) !==\n                    (containingBlock as unknown as Window)\n            ) {\n                const css = getComputedStyle(containingBlock);\n                // The overlay is \"over transforms\" when the containing block uses specific CSS...\n                overTransforms =\n                    // the `transform` property\n                    css.transform !== 'none' ||\n                    // the `filter` property for anything other than \"none\"\n                    (css.filter ? css.filter !== 'none' : false) ||\n                    // a value of \"paint\", \"layout\", \"strict\", or \"content\" for `contain`\n                    ['paint', 'layout', 'strict', 'content'].some((value) =>\n                        (css.contain || '').includes(value)\n                    );\n                // overTransforms = true;\n            }\n\n            if (onTopLayer && overTransforms && containingBlock) {\n                const rect = containingBlock.getBoundingClientRect();\n                diffCoords.x = rect.x;\n                diffCoords.y = rect.y;\n            }\n        }\n\n        if (onTopLayer && topLayerIsFloating) {\n            return {\n                x: x + diffCoords.x,\n                y: y + diffCoords.y,\n                data: diffCoords,\n            };\n        }\n\n        if (onTopLayer) {\n            return {\n                x,\n                y,\n                data: diffCoords,\n            };\n        }\n\n        return {\n            x: x - diffCoords.x,\n            y: y - diffCoords.y,\n            data: diffCoords,\n        };\n    },\n});\n"],
  "mappings": ";AAYA;AAAA,EACI;AAAA,EACA;AAAA,EACA;AAAA,OACG;AACP,SAAS,sBAAsB;AAExB,aAAM,yBAAyB,OAAmB;AAAA,EACrD,MAAM;AAAA,EACN,MAAM,GAAG,qBAAsC;AAC3C,UAAM;AAAA,MACF;AAAA,MACA;AAAA,MACA,UAAU,EAAE,WAAW,SAAS;AAAA,IACpC,IAAI;AACJ,QAAI,aAAa;AACjB,QAAI,qBAAqB;AACzB,QAAI,kBAAkB;AACtB,UAAM,aAAa;AAAA,MACf,GAAG;AAAA,MACH,GAAG;AAAA,IACP;AACA,QAAI;AACA,mBAAa,cAAc,SAAS,QAAQ,eAAe;AAAA,IAE/D,SAAS,OAAO;AAAA,IAAC;AACjB,QAAI;AACA,mBAAa,cAAc,SAAS,QAAQ,OAAO;AAAA,IAEvD,SAAS,OAAO;AAAA,IAAC;AACjB,QAAI;AACA,mBAAa,cAAc,SAAS,QAAQ,QAAQ;AAAA,IAGxD,SAAS,OAAO;AAAA,IAAC;AACjB,yBAAqB;AACrB,UAAM,2BAA2B,IAAI,MAAM,2BAA2B;AAAA,MAClE,UAAU;AAAA,MACV,SAAS;AAAA,IACb,CAAC;AACD,aAAS;AAAA,MACL;AAAA,MACA,CAAC,UAAiB;AACd,QAAC,MAAM,aAAa,EAA2B,QAAQ,CAAC,OAAO;AAC3D,4BAAkB,mBAAmB,OAAO;AAC5C,cAAI,OAAO,YAAY,GAAG,cAAc;AAAU;AAClD,cAAI;AACA,yBAAa,cAAc,GAAG,QAAQ,QAAQ;AAAA,UAGlD,SAAS,OAAO;AAAA,UAAC;AAAA,QACrB,CAAC;AAAA,MACL;AAAA,MACA,EAAE,MAAM,KAAK;AAAA,IACjB;AACA,aAAS,cAAc,wBAAwB;AAC/C,QAAI,iBAAiB;AACrB,QAAI,EAAE,qBAAqB,iBAAiB;AACxC,YAAM,OAAQ,kBAAkB,YAAY;AAC5C,YAAM,kBAAkB,kBAAkB,IAAI,IACxC,OACA,mBAAmB,IAAI;AAC7B,UACI,oBAAoB,QACpB,UAAU,eAAe,MACpB,iBACP;AACE,cAAM,MAAM,iBAAiB,eAAe;AAE5C;AAAA,QAEI,IAAI,cAAc;AAAA,SAEjB,IAAI,SAAS,IAAI,WAAW,SAAS;AAAA,QAEtC,CAAC,SAAS,UAAU,UAAU,SAAS,EAAE;AAAA,UAAK,CAAC,WAC1C,IAAI,WAAW,IAAI,SAAS,KAAK;AAAA,QACtC;AAAA,MAER;AAEA,UAAI,cAAc,kBAAkB,iBAAiB;AACjD,cAAM,OAAO,gBAAgB,sBAAsB;AACnD,mBAAW,IAAI,KAAK;AACpB,mBAAW,IAAI,KAAK;AAAA,MACxB;AAAA,IACJ;AAEA,QAAI,cAAc,oBAAoB;AAClC,aAAO;AAAA,QACH,GAAG,IAAI,WAAW;AAAA,QAClB,GAAG,IAAI,WAAW;AAAA,QAClB,MAAM;AAAA,MACV;AAAA,IACJ;AAEA,QAAI,YAAY;AACZ,aAAO;AAAA,QACH;AAAA,QACA;AAAA,QACA,MAAM;AAAA,MACV;AAAA,IACJ;AAEA,WAAO;AAAA,MACH,GAAG,IAAI,WAAW;AAAA,MAClB,GAAG,IAAI,WAAW;AAAA,MAClB,MAAM;AAAA,IACV;AAAA,EACJ;AACJ;",
  "names": []
}
