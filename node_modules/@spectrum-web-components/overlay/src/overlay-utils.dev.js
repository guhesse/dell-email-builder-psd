"use strict";
export const parentOverlayOf = (el) => {
  if (!el)
    return null;
  const closestOverlay = el.closest("active-overlay");
  if (closestOverlay) {
    return closestOverlay;
  }
  const rootNode = el.getRootNode();
  if (rootNode.host) {
    return parentOverlayOf(rootNode.host);
  }
  return null;
};
export const findOverlaysRootedInOverlay = (rootOverlay, activeOverlays) => {
  const overlays = [];
  if (!rootOverlay)
    return [];
  for (const overlay of activeOverlays) {
    if (!overlay.root)
      continue;
    if (parentOverlayOf(overlay.root) === rootOverlay) {
      overlays.push(overlay);
      overlays.push(
        ...findOverlaysRootedInOverlay(overlay, activeOverlays)
      );
    }
  }
  return overlays;
};
//# sourceMappingURL=overlay-utils.dev.js.map
