{
  "version": 3,
  "sources": ["TableHeadCell.ts"],
  "sourcesContent": ["/*\nCopyright 2022 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\nimport {\n    CSSResultArray,\n    html,\n    PropertyValues,\n    SpectrumElement,\n    TemplateResult,\n} from '@spectrum-web-components/base';\nimport { property } from '@spectrum-web-components/base/src/decorators.js';\nimport '@spectrum-web-components/icons-ui/icons/sp-icon-arrow100.js';\n\nimport styles from './table-head-cell.css.js';\nimport arrowStyles from '@spectrum-web-components/icon/src/spectrum-icon-arrow.css.js';\n\nexport type SortedEventDetails = {\n    sortDirection: 'asc' | 'desc';\n    sortKey: string;\n};\n\nconst ariaSortValue = (sortDirection?: 'asc' | 'desc'): string => {\n    const values = {\n        asc: 'ascending',\n        desc: 'descending',\n    };\n    return values[sortDirection as 'asc' | 'desc'] || 'none';\n};\n\n/**\n * @element sp-table\n *\n * @fires sorted - Announces that the table head has been sorted and handles the sorted event\n */\nexport class TableHeadCell extends SpectrumElement {\n    public static override get styles(): CSSResultArray {\n        return [styles, arrowStyles];\n    }\n\n    @property({ reflect: true })\n    public role = 'columnheader';\n\n    @property({ type: Boolean, reflect: true })\n    public sortable = false;\n\n    @property({ reflect: true, attribute: 'sort-direction' })\n    public sortDirection: 'asc' | 'desc' | undefined;\n\n    @property({ attribute: 'sort-key' })\n    public sortKey = '';\n\n    protected handleClick(): void {\n        if (!this.sortable) return;\n        if (this.sortDirection) {\n            this.sortDirection = this.sortDirection === 'asc' ? 'desc' : 'asc';\n        } else {\n            this.sortDirection = 'asc';\n        }\n        this.dispatchEvent(\n            new CustomEvent<SortedEventDetails>('sorted', {\n                bubbles: true,\n                detail: {\n                    sortDirection: this.sortDirection,\n                    sortKey: this.sortKey,\n                },\n            })\n        );\n    }\n\n    protected override render(): TemplateResult {\n        const visiblySorted = this.sortable && !!this.sortDirection;\n        return html`\n            <slot></slot>\n            ${visiblySorted\n                ? html`\n                      <sp-icon-arrow100\n                          class=\"sortedIcon spectrum-UIIcon-ArrowDown100\"\n                      ></sp-icon-arrow100>\n                  `\n                : html``}\n        `;\n    }\n\n    protected override firstUpdated(changes: PropertyValues): void {\n        super.firstUpdated(changes);\n        this.addEventListener('click', this.handleClick);\n    }\n\n    protected override update(changes: PropertyValues): void {\n        if (changes.has('sortDirection')) {\n            this.setAttribute('aria-sort', ariaSortValue(this.sortDirection));\n        }\n        if (changes.has('sortable')) {\n            this.tabIndex = this.sortable ? 0 : -1;\n        }\n        super.update(changes);\n    }\n}\n"],
  "mappings": ";;;;;;;;;;;;AAWA;AAAA,EAEI;AAAA,EAEA;AAAA,OAEG;AACP,SAAS,gBAAgB;AACzB,OAAO;AAEP,OAAO,YAAY;AACnB,OAAO,iBAAiB;AAOxB,MAAM,gBAAgB,CAAC,kBAA2C;AAC9D,QAAM,SAAS;AAAA,IACX,KAAK;AAAA,IACL,MAAM;AAAA,EACV;AACA,SAAO,OAAO,kBAAoC;AACtD;AAOO,aAAM,sBAAsB,gBAAgB;AAAA,EAA5C;AAAA;AAMH,SAAO,OAAO;AAGd,SAAO,WAAW;AAMlB,SAAO,UAAU;AAAA;AAAA,EAdjB,WAA2B,SAAyB;AAChD,WAAO,CAAC,QAAQ,WAAW;AAAA,EAC/B;AAAA,EAcU,cAAoB;AAC1B,QAAI,CAAC,KAAK;AAAU;AACpB,QAAI,KAAK,eAAe;AACpB,WAAK,gBAAgB,KAAK,kBAAkB,QAAQ,SAAS;AAAA,IACjE,OAAO;AACH,WAAK,gBAAgB;AAAA,IACzB;AACA,SAAK;AAAA,MACD,IAAI,YAAgC,UAAU;AAAA,QAC1C,SAAS;AAAA,QACT,QAAQ;AAAA,UACJ,eAAe,KAAK;AAAA,UACpB,SAAS,KAAK;AAAA,QAClB;AAAA,MACJ,CAAC;AAAA,IACL;AAAA,EACJ;AAAA,EAEmB,SAAyB;AACxC,UAAM,gBAAgB,KAAK,YAAY,CAAC,CAAC,KAAK;AAC9C,WAAO;AAAA;AAAA,cAED,gBACI;AAAA;AAAA;AAAA;AAAA,sBAKA;AAAA;AAAA,EAEd;AAAA,EAEmB,aAAa,SAA+B;AAC3D,UAAM,aAAa,OAAO;AAC1B,SAAK,iBAAiB,SAAS,KAAK,WAAW;AAAA,EACnD;AAAA,EAEmB,OAAO,SAA+B;AACrD,QAAI,QAAQ,IAAI,eAAe,GAAG;AAC9B,WAAK,aAAa,aAAa,cAAc,KAAK,aAAa,CAAC;AAAA,IACpE;AACA,QAAI,QAAQ,IAAI,UAAU,GAAG;AACzB,WAAK,WAAW,KAAK,WAAW,IAAI;AAAA,IACxC;AACA,UAAM,OAAO,OAAO;AAAA,EACxB;AACJ;AAzDW;AAAA,EADN,SAAS,EAAE,SAAS,KAAK,CAAC;AAAA,GALlB,cAMF;AAGA;AAAA,EADN,SAAS,EAAE,MAAM,SAAS,SAAS,KAAK,CAAC;AAAA,GARjC,cASF;AAGA;AAAA,EADN,SAAS,EAAE,SAAS,MAAM,WAAW,iBAAiB,CAAC;AAAA,GAX/C,cAYF;AAGA;AAAA,EADN,SAAS,EAAE,WAAW,WAAW,CAAC;AAAA,GAd1B,cAeF;",
  "names": []
}
