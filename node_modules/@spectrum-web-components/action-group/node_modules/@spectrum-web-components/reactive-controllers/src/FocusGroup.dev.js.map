{
  "version": 3,
  "sources": ["FocusGroup.ts"],
  "sourcesContent": ["/*\nCopyright 2020 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\nimport type { ReactiveController, ReactiveElement } from 'lit';\n\ntype DirectionTypes = 'horizontal' | 'vertical' | 'both' | 'grid';\nexport type FocusGroupConfig<T> = {\n    focusInIndex?: (_elements: T[]) => number;\n    direction?: DirectionTypes | (() => DirectionTypes);\n    elementEnterAction?: (el: T) => void;\n    elements: () => T[];\n    isFocusableElement?: (el: T) => boolean;\n    listenerScope?: HTMLElement | (() => HTMLElement);\n};\n\nfunction ensureMethod<T, RT>(\n    value: T | RT | undefined,\n    type: string,\n    fallback: T\n): T {\n    if (typeof value === type) {\n        return (() => value) as T;\n    } else if (typeof value === 'function') {\n        return value as T;\n    }\n    return fallback;\n}\n\nexport class FocusGroupController<T extends HTMLElement>\n    implements ReactiveController\n{\n    protected cachedElements?: T[];\n\n    get currentIndex(): number {\n        if (this._currentIndex === -1) {\n            this._currentIndex = this.focusInIndex;\n        }\n        return this._currentIndex - this.offset;\n    }\n\n    set currentIndex(currentIndex) {\n        this._currentIndex = currentIndex + this.offset;\n    }\n\n    private _currentIndex = -1;\n\n    get direction(): DirectionTypes {\n        return this._direction();\n    }\n\n    _direction = (): DirectionTypes => 'both';\n\n    public directionLength = 5;\n\n    elementEnterAction = (_el: T): void => {\n        return;\n    };\n\n    get elements(): T[] {\n        if (!this.cachedElements) {\n            this.cachedElements = this._elements();\n        }\n        return this.cachedElements;\n    }\n\n    private _elements!: () => T[];\n\n    protected set focused(focused: boolean) {\n        /* c8 ignore next 1 */\n        if (focused === this.focused) return;\n        this._focused = focused;\n    }\n\n    protected get focused(): boolean {\n        return this._focused;\n    }\n\n    private _focused = false;\n\n    get focusInElement(): T {\n        return this.elements[this.focusInIndex];\n    }\n\n    get focusInIndex(): number {\n        return this._focusInIndex(this.elements);\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _focusInIndex = (_elements: T[]): number => 0;\n\n    host: ReactiveElement;\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    isFocusableElement = (_el: T): boolean => true;\n\n    isEventWithinListenerScope(event: Event): boolean {\n        if (this._listenerScope() === this.host) return true;\n        return event.composedPath().includes(this._listenerScope());\n    }\n\n    _listenerScope = (): HTMLElement => this.host;\n\n    // When elements are virtualized, the delta between the first element\n    // and the first rendered element.\n    offset = 0;\n\n    constructor(\n        host: ReactiveElement,\n        {\n            direction,\n            elementEnterAction,\n            elements,\n            focusInIndex,\n            isFocusableElement,\n            listenerScope,\n        }: FocusGroupConfig<T> = { elements: () => [] }\n    ) {\n        this.host = host;\n        this.host.addController(this);\n        this._elements = elements;\n        this.isFocusableElement = isFocusableElement || this.isFocusableElement;\n        this._direction = ensureMethod<() => DirectionTypes, DirectionTypes>(\n            direction,\n            'string',\n            this._direction\n        );\n        this.elementEnterAction = elementEnterAction || this.elementEnterAction;\n        this._focusInIndex = ensureMethod<(_elements: T[]) => number, number>(\n            focusInIndex,\n            'number',\n            this._focusInIndex\n        );\n        this._listenerScope = ensureMethod<() => HTMLElement, HTMLElement>(\n            listenerScope,\n            'object',\n            this._listenerScope\n        );\n    }\n\n    update({ elements }: FocusGroupConfig<T> = { elements: () => [] }): void {\n        this.unmanage();\n        this._elements = elements;\n        this.clearElementCache();\n        this.manage();\n    }\n\n    focus(options?: FocusOptions): void {\n        let focusElement = this.elements[this.currentIndex];\n        if (!focusElement || !this.isFocusableElement(focusElement)) {\n            this.setCurrentIndexCircularly(1);\n            focusElement = this.elements[this.currentIndex];\n        }\n        if (focusElement && this.isFocusableElement(focusElement)) {\n            focusElement.focus(options);\n        }\n    }\n\n    clearElementCache(offset = 0): void {\n        delete this.cachedElements;\n        this.offset = offset;\n    }\n\n    setCurrentIndexCircularly(diff: number): void {\n        const { length } = this.elements;\n        let steps = length;\n        // start at a possibly not 0 index\n        let nextIndex = (length + this.currentIndex + diff) % length;\n        while (\n            // don't cycle the elements more than once\n            steps &&\n            this.elements[nextIndex] &&\n            !this.isFocusableElement(this.elements[nextIndex])\n        ) {\n            nextIndex = (length + nextIndex + diff) % length;\n            steps -= 1;\n        }\n        this.currentIndex = nextIndex;\n    }\n\n    hostContainsFocus(): void {\n        this.host.addEventListener('focusout', this.handleFocusout);\n        this.host.addEventListener('keydown', this.handleKeydown);\n        this.focused = true;\n    }\n\n    hostNoLongerContainsFocus(): void {\n        this.host.addEventListener('focusin', this.handleFocusin);\n        this.host.removeEventListener('focusout', this.handleFocusout);\n        this.host.removeEventListener('keydown', this.handleKeydown);\n        this.currentIndex = this.focusInIndex;\n        this.focused = false;\n    }\n\n    isRelatedTargetAnElement(event: FocusEvent): boolean {\n        const relatedTarget = event.relatedTarget as null | Element;\n        return !this.elements.includes(relatedTarget as T);\n    }\n\n    handleFocusin = (event: FocusEvent): void => {\n        if (!this.isEventWithinListenerScope(event)) return;\n        if (this.isRelatedTargetAnElement(event)) {\n            this.hostContainsFocus();\n        }\n        const path = event.composedPath() as T[];\n        let targetIndex = -1;\n        path.find((el) => {\n            targetIndex = this.elements.indexOf(el);\n            return targetIndex !== -1;\n        });\n        this.currentIndex = targetIndex > -1 ? targetIndex : this.currentIndex;\n    };\n\n    handleFocusout = (event: FocusEvent): void => {\n        if (this.isRelatedTargetAnElement(event)) {\n            this.hostNoLongerContainsFocus();\n        }\n    };\n\n    acceptsEventCode(code: string): boolean {\n        if (code === 'End' || code === 'Home') {\n            return true;\n        }\n        switch (this.direction) {\n            case 'horizontal':\n                return code === 'ArrowLeft' || code === 'ArrowRight';\n            case 'vertical':\n                return code === 'ArrowUp' || code === 'ArrowDown';\n            case 'both':\n            case 'grid':\n                return code.startsWith('Arrow');\n        }\n    }\n\n    handleKeydown = (event: KeyboardEvent): void => {\n        if (!this.acceptsEventCode(event.code) || event.defaultPrevented) {\n            return;\n        }\n        let diff = 0;\n        switch (event.code) {\n            case 'ArrowRight':\n                diff += 1;\n                break;\n            case 'ArrowDown':\n                diff += this.direction === 'grid' ? this.directionLength : 1;\n                break;\n            case 'ArrowLeft':\n                diff -= 1;\n                break;\n            case 'ArrowUp':\n                diff -= this.direction === 'grid' ? this.directionLength : 1;\n                break;\n            case 'End':\n                this.currentIndex = 0;\n                diff -= 1;\n                break;\n            case 'Home':\n                this.currentIndex = this.elements.length - 1;\n                diff += 1;\n                break;\n        }\n        event.preventDefault();\n        if (this.direction === 'grid' && this.currentIndex + diff < 0) {\n            this.currentIndex = 0;\n        } else if (\n            this.direction === 'grid' &&\n            this.currentIndex + diff > this.elements.length - 1\n        ) {\n            this.currentIndex = this.elements.length - 1;\n        } else {\n            this.setCurrentIndexCircularly(diff);\n        }\n        // To allow the `focusInIndex` to be calculated with the \"after\" state of the keyboard interaction\n        // do `elementEnterAction` _before_ focusing the next element.\n        this.elementEnterAction(this.elements[this.currentIndex]);\n        this.focus();\n    };\n\n    manage(): void {\n        this.addEventListeners();\n    }\n\n    unmanage(): void {\n        this.removeEventListeners();\n    }\n\n    addEventListeners(): void {\n        this.host.addEventListener('focusin', this.handleFocusin);\n    }\n\n    removeEventListeners(): void {\n        this.host.removeEventListener('focusin', this.handleFocusin);\n        this.host.removeEventListener('focusout', this.handleFocusout);\n        this.host.removeEventListener('keydown', this.handleKeydown);\n    }\n\n    hostConnected(): void {\n        this.addEventListeners();\n    }\n\n    hostDisconnected(): void {\n        this.removeEventListeners();\n    }\n}\n"],
  "mappings": "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",
  "names": []
}
