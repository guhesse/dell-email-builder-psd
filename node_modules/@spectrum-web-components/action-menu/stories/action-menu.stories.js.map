{
  "version": 3,
  "sources": ["action-menu.stories.ts"],
  "sourcesContent": ["/*\nCopyright 2020 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\nimport { html, TemplateResult } from '@spectrum-web-components/base';\n\nimport '@spectrum-web-components/action-menu/sp-action-menu.js';\nimport '@spectrum-web-components/menu/sp-menu.js';\nimport '@spectrum-web-components/menu/sp-menu-item.js';\nimport '@spectrum-web-components/menu/sp-menu-group.js';\nimport '@spectrum-web-components/menu/sp-menu-divider.js';\nimport '@spectrum-web-components/tooltip/sp-tooltip.js';\nimport { ActionMenuMarkup } from './';\nimport { makeOverBackground } from '../../button/stories/index.js';\n\nimport '@spectrum-web-components/icons-workflow/icons/sp-icon-settings.js';\nimport type { MenuItem } from '@spectrum-web-components/menu/src/MenuItem.js';\nimport { Placement } from '@spectrum-web-components/overlay/src/overlay-types.js';\nimport { Menu } from '@spectrum-web-components/menu';\n\nexport default {\n    component: 'sp-action-menu',\n    title: 'Action menu',\n    argTypes: {\n        disabled: {\n            name: 'disabled',\n            type: { name: 'boolean', required: false },\n            description:\n                'Disable this control. It will not receive focus or events.',\n            table: {\n                type: { summary: 'boolean' },\n                defaultValue: { summary: false },\n            },\n            control: {\n                type: 'boolean',\n            },\n        },\n        open: {\n            name: 'open',\n            type: { name: 'boolean', required: false },\n            description: 'Whether the menu is open or not.',\n            table: {\n                type: { summary: 'boolean' },\n                defaultValue: { summary: false },\n            },\n            control: 'boolean',\n        },\n        visibleLabel: {\n            name: 'Visible Label',\n            description: 'The placeholder content for the picker.',\n            type: { name: 'string', required: false },\n            table: {\n                type: { summary: 'string' },\n                defaultValue: { summary: '' },\n            },\n            control: 'text',\n        },\n        tooltipDescription: {\n            name: 'Tooltip Description',\n            type: { name: 'string', required: false },\n            description: 'Tooltip description',\n            table: {\n                type: { summary: 'string' },\n                defaultValue: { summary: '' },\n            },\n            control: {\n                type: 'text',\n            },\n        },\n        tooltipPlacement: {\n            name: 'Tooltip Placement',\n            type: { name: 'string', required: false },\n            description: 'Tooltip Placement.',\n            table: {\n                defaultValue: { summary: 'bottom' },\n            },\n            control: {\n                options: [\n                    'auto',\n                    'auto-start',\n                    'auto-end',\n                    'top',\n                    'bottom',\n                    'right',\n                    'left',\n                    'top-start',\n                    'top-end',\n                    'bottom-start',\n                    'bottom-end',\n                    'right-start',\n                    'right-end',\n                    'left-start',\n                    'left-end',\n                    'none',\n                ],\n                type: 'select',\n            },\n        },\n        quiet: {\n            name: 'quiet',\n            type: { name: 'boolean', required: false },\n            description: 'Quiet rendering',\n            table: {\n                type: { summary: 'boolean' },\n                defaultValue: { summary: false },\n            },\n            control: {\n                type: 'boolean',\n            },\n        },\n        staticValue: {\n            name: 'static',\n            type: { name: 'string', required: false },\n            description: 'The visual static variant to apply to the button.',\n            table: {\n                type: { summary: 'string' },\n                defaultValue: { summary: 'none' },\n            },\n            control: {\n                type: 'select',\n                labels: {\n                    white: 'white',\n                    black: 'black',\n                    none: undefined,\n                },\n                options: ['white', 'black', 'none'],\n            },\n        },\n    },\n    args: {\n        visibleLabel: 'More Actions',\n        disabled: false,\n        open: false,\n        quiet: false,\n        tooltipDescription: '',\n        tooltipPlacement: 'bottom',\n        static: undefined,\n    },\n};\n\ninterface StoryArgs {\n    visibleLabel?: string;\n    disabled?: boolean;\n    open?: boolean;\n    customIcon?: string | TemplateResult;\n    selects?: 'single';\n    selected?: boolean;\n    quiet?: boolean;\n    staticValue?: 'white' | 'black' | undefined;\n    tooltipDescription?: string | 'none';\n    tooltipPlacement?: Placement;\n}\n\nconst Template = (args: StoryArgs = {}): TemplateResult =>\n    ActionMenuMarkup(args);\n\nexport const Default = (args: StoryArgs = {}): TemplateResult => Template(args);\n\nexport const staticWhite = (args: StoryArgs = {}): TemplateResult =>\n    Template(args);\nstaticWhite.args = {\n    staticValue: 'white',\n};\nstaticWhite.decorators = [makeOverBackground()];\nexport const staticBlack = (args: StoryArgs = {}): TemplateResult =>\n    Template(args);\nstaticBlack.args = {\n    staticValue: 'black',\n};\nstaticBlack.decorators = [makeOverBackground()];\nexport const quiet = (args: StoryArgs = {}): TemplateResult => Template(args);\nquiet.args = {\n    quiet: true,\n};\n\nexport const labelOnly = ({\n    changeHandler = (() => undefined) as (event: Event) => void,\n    disabled = false,\n    open = false,\n    size = 'm' as 'm' | 's' | 'l' | 'xl' | 'xxl',\n    selects = '' as 'single',\n    selected = false,\n} = {}): TemplateResult => html`\n    <sp-action-menu\n        ?disabled=${disabled}\n        ?open=${open}\n        size=${size}\n        @change=${(event: Event & { target: Menu }): void => {\n            navigator.clipboard.writeText(event.target.value);\n            changeHandler(event);\n        }}\n        .selects=${selects ? selects : undefined}\n        value=${selected ? 'Select Inverse' : ''}\n    >\n        <span slot=\"label-only\">Label Only</span>\n        <sp-menu-item>Deselect</sp-menu-item>\n        <sp-menu-item ?selected=${selected}>Select Inverse</sp-menu-item>\n        <sp-menu-item>Feather...</sp-menu-item>\n        <sp-menu-item>Select and Mask...</sp-menu-item>\n        <sp-menu-divider></sp-menu-divider>\n        <sp-menu-item>Save Selection</sp-menu-item>\n        <sp-menu-item disabled>Make Work Path</sp-menu-item>\n    </sp-action-menu>\n`;\n\nexport const selects = (args: StoryArgs = {}): TemplateResult =>\n    Template({\n        ...args,\n        selects: 'single',\n        selected: true,\n    });\nselects.args = {\n    open: true,\n};\n\nexport const iconOnly = (args: StoryArgs = {}): TemplateResult =>\n    Template(args);\niconOnly.args = {\n    visibleLabel: '',\n};\n\nexport const tooltipDescriptionAndPlacement = (\n    args: StoryArgs = {}\n): TemplateResult => Template(args);\ntooltipDescriptionAndPlacement.args = {\n    tooltipDescription: 'Your tooltip string here',\n    visibleLabel: '',\n    tooltipPlacement: 'bottom',\n} as StoryArgs;\n\nexport const customIcon = (args: StoryArgs): TemplateResult => Template(args);\ncustomIcon.args = {\n    customIcon: html`\n        <sp-icon-settings slot=\"icon\"></sp-icon-settings>\n    `,\n    visibleLabel: '',\n};\n\nexport const submenu = (): TemplateResult => {\n    return html`\n        <sp-action-menu label=\"More Actions\">\n            <sp-menu-item>One</sp-menu-item>\n            <sp-menu-item>Two</sp-menu-item>\n            <sp-menu-item>\n                Select some items\n                <sp-menu slot=\"submenu\" selects=\"multiple\">\n                    <sp-menu-item>A</sp-menu-item>\n                    <sp-menu-item selected>B</sp-menu-item>\n                    <sp-menu-item>C</sp-menu-item>\n                </sp-menu>\n            </sp-menu-item>\n        </sp-action-menu>\n    `;\n};\n\nexport const controlled = (): TemplateResult => {\n    const state = {\n        snap: true,\n        grid: false,\n        guides: true,\n        latestChange: '',\n    };\n    function toggle(prop: 'snap' | 'grid' | 'guides') {\n        return (event: Event): void => {\n            const item = event.target as MenuItem;\n            state[prop] = !state[prop];\n            // in Lit-based usage, this would be handled via render():\n            // <sp-menu-item ?selected=${this.isSomethingSelected}>\n            item.selected = state[prop];\n        };\n    }\n    function onChange(event: Event): void {\n        state.latestChange = (event.target as MenuItem).value;\n        logState();\n    }\n    function logState(): void {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        document.getElementById(\n            'state-json'\n        )!.textContent = `application state: ${JSON.stringify(state)}`;\n    }\n    return html`\n        <sp-action-menu label=\"View\" @change=${onChange}>\n            <sp-menu-item value=\"action\" @click=${() => alert('action')}>\n                Non-selectable action\n            </sp-menu-item>\n            <sp-menu-item\n                value=\"snap\"\n                ?selected=${state.snap}\n                @click=${toggle('snap')}\n            >\n                Snap\n            </sp-menu-item>\n            <sp-menu-item>\n                Show\n                <sp-menu\n                    slot=\"submenu\"\n                    selects=\"multiple\"\n                    @change=${(event: Event) => event.preventDefault()}\n                >\n                    <sp-menu-item\n                        value=\"grid\"\n                        ?selected=${state.grid}\n                        @click=${toggle('grid')}\n                    >\n                        Grid\n                    </sp-menu-item>\n                    <sp-menu-item\n                        value=\"guides\"\n                        ?selected=${state.guides}\n                        @click=${toggle('guides')}\n                    >\n                        Guides\n                    </sp-menu-item>\n                </sp-menu>\n            </sp-menu-item>\n        </sp-action-menu>\n        <span id=\"state-json\"></span>\n    `;\n};\n\nexport const groups = (): TemplateResult => html`\n    <sp-action-menu open>\n        <sp-menu-group id=\"cms\">\n            <span slot=\"header\">cms</span>\n            <sp-menu-item value=\"updateAllSiteContent\">\n                Update All Content\n            </sp-menu-item>\n            <sp-menu-item value=\"refreshAllXDs\">Refresh All XDs</sp-menu-item>\n        </sp-menu-group>\n        <sp-menu-group id=\"ssg\">\n            <span slot=\"header\">ssg</span>\n            <sp-menu-item value=\"clearCache\">Clear Cache</sp-menu-item>\n        </sp-menu-group>\n        <sp-menu-group id=\"vrt\">\n            <span slot=\"header\">vrt</span>\n            <sp-menu-item value=\"vrt-contributions\">Contributions</sp-menu-item>\n            <sp-menu-item value=\"vrt-internal\">Internal</sp-menu-item>\n            <sp-menu-item value=\"vrt-public\">Public</sp-menu-item>\n            <sp-menu-item value=\"vrt-patterns\">Patterns</sp-menu-item>\n            <sp-menu-item value=\"vrt\">All</sp-menu-item>\n        </sp-menu-group>\n        <sp-menu-divider></sp-menu-divider>\n        <sp-menu-group id=\"misc\">\n            <sp-menu-item value=\"logout\">Logout</sp-menu-item>\n        </sp-menu-group>\n    </sp-action-menu>\n`;\n"],
  "mappings": "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",
  "names": ["selects"]
}
