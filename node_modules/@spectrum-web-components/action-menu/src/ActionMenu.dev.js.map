{
  "version": 3,
  "sources": ["ActionMenu.ts"],
  "sourcesContent": ["/*\nCopyright 2020 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\n\nimport {\n    CSSResultArray,\n    html,\n    PropertyValues,\n    TemplateResult,\n} from '@spectrum-web-components/base';\nimport { state } from '@spectrum-web-components/base/src/decorators.js';\nimport { ifDefined } from '@spectrum-web-components/base/src/directives.js';\nimport { property } from '@spectrum-web-components/base/src/decorators.js';\nimport { DESCRIPTION_ID, PickerBase } from '@spectrum-web-components/picker';\nimport '@spectrum-web-components/action-button/sp-action-button.js';\nimport { ObserveSlotPresence } from '@spectrum-web-components/shared/src/observe-slot-presence.js';\nimport { ObserveSlotText } from '@spectrum-web-components/shared/src/observe-slot-text.js';\nimport '@spectrum-web-components/icons-workflow/icons/sp-icon-more.js';\nimport actionMenuStyles from './action-menu.css.js';\n\n/**\n * @element sp-action-menu\n *\n * @slot - menu items to be listed in the Action Menu\n * @slot icon - The icon to use for Action Menu\n * @slot label - The label to use on for the Action Menu\n * @slot tooltip - Tooltip to to be applied to the the Action Button\n * @attr selects - By default `sp-action-menu` does not manage a selection. If\n *   you'd like for a selection to be held by the `sp-menu` that it presents in\n *   its overlay, use `selects=\"single\" to activate this functionality.\n */\nexport class ActionMenu extends ObserveSlotPresence(\n    ObserveSlotText(PickerBase, 'label'),\n    '[slot=\"label-only\"]'\n) {\n    public static override get styles(): CSSResultArray {\n        return [actionMenuStyles];\n    }\n\n    @property({ type: String })\n    public override selects: undefined | 'single' = undefined;\n\n    @property({ type: String, reflect: true })\n    public static: 'white' | 'black' | undefined = undefined;\n\n    protected override listRole: 'listbox' | 'menu' = 'menu';\n    protected override itemRole = 'menuitem';\n    private get hasLabel(): boolean {\n        return this.slotHasContent;\n    }\n\n    @state()\n    private get labelOnly(): boolean {\n        return this.slotContentIsPresent;\n    }\n\n    protected override get buttonContent(): TemplateResult[] {\n        return [\n            html`\n                ${this.labelOnly\n                    ? html``\n                    : html`\n                          <slot\n                              name=\"icon\"\n                              slot=\"icon\"\n                              ?icon-only=${!this.hasLabel}\n                              ?hidden=${this.labelOnly}\n                          >\n                              <sp-icon-more class=\"icon\"></sp-icon-more>\n                          </slot>\n                      `}\n                <slot name=\"label\" ?hidden=${!this.hasLabel}></slot>\n                <slot name=\"label-only\"></slot>\n                <slot name=\"tooltip\"></slot>\n            `,\n        ];\n    }\n\n    protected override render(): TemplateResult {\n        return html`\n            <sp-action-button\n                aria-describedby=${DESCRIPTION_ID}\n                ?quiet=${this.quiet}\n                ?selected=${this.open}\n                static=${ifDefined(this.static)}\n                aria-haspopup=\"true\"\n                aria-controls=${ifDefined(this.open ? 'menu' : undefined)}\n                aria-expanded=${this.open ? 'true' : 'false'}\n                aria-label=${ifDefined(this.label || undefined)}\n                id=\"button\"\n                class=\"button\"\n                size=${this.size}\n                @blur=${this.handleButtonBlur}\n                @pointerdown=${this.handleButtonPointerdown}\n                @focus=${this.handleButtonFocus}\n                @click=${this.handleButtonClick}\n                @keydown=${{\n                    handleEvent: this.handleEnterKeydown,\n                    capture: true,\n                }}\n                ?disabled=${this.disabled}\n            >\n                ${this.buttonContent}\n            </sp-action-button>\n            ${this.renderMenu} ${this.renderDescriptionSlot}\n        `;\n    }\n\n    protected override update(changedProperties: PropertyValues<this>): void {\n        if (changedProperties.has('invalid')) {\n            this.invalid = false;\n        }\n        super.update(changedProperties);\n    }\n}\n"],
  "mappings": ";;;;;;;;;;;;AAYA;AAAA,EAEI;AAAA,OAGG;AACP,SAAS,aAAa;AACtB,SAAS,iBAAiB;AAC1B,SAAS,gBAAgB;AACzB,SAAS,gBAAgB,kBAAkB;AAC3C,OAAO;AACP,SAAS,2BAA2B;AACpC,SAAS,uBAAuB;AAChC,OAAO;AACP,OAAO,sBAAsB;AAatB,aAAM,mBAAmB;AAAA,EAC5B,gBAAgB,YAAY,OAAO;AAAA,EACnC;AACJ,EAAE;AAAA,EAHK;AAAA;AASH,SAAgB,UAAgC;AAGhD,SAAO,SAAwC;AAE/C,SAAmB,WAA+B;AAClD,SAAmB,WAAW;AAAA;AAAA,EAX9B,WAA2B,SAAyB;AAChD,WAAO,CAAC,gBAAgB;AAAA,EAC5B;AAAA,EAUA,IAAY,WAAoB;AAC5B,WAAO,KAAK;AAAA,EAChB;AAAA,EAGA,IAAY,YAAqB;AAC7B,WAAO,KAAK;AAAA,EAChB;AAAA,EAEA,IAAuB,gBAAkC;AACrD,WAAO;AAAA,MACH;AAAA,kBACM,KAAK,YACD,SACA;AAAA;AAAA;AAAA;AAAA,2CAIqB,CAAC,KAAK,QAAQ;AAAA,wCACjB,KAAK,SAAS;AAAA;AAAA;AAAA;AAAA,uBAI/B;AAAA,6CACsB,CAAC,KAAK,QAAQ;AAAA;AAAA;AAAA;AAAA,IAInD;AAAA,EACJ;AAAA,EAEmB,SAAyB;AACxC,WAAO;AAAA;AAAA,mCAEoB,cAAc;AAAA,yBACxB,KAAK,KAAK;AAAA,4BACP,KAAK,IAAI;AAAA,yBACZ,UAAU,KAAK,MAAM,CAAC;AAAA;AAAA,gCAEf,UAAU,KAAK,OAAO,SAAS,MAAS,CAAC;AAAA,gCACzC,KAAK,OAAO,SAAS,OAAO;AAAA,6BAC/B,UAAU,KAAK,SAAS,MAAS,CAAC;AAAA;AAAA;AAAA,uBAGxC,KAAK,IAAI;AAAA,wBACR,KAAK,gBAAgB;AAAA,+BACd,KAAK,uBAAuB;AAAA,yBAClC,KAAK,iBAAiB;AAAA,yBACtB,KAAK,iBAAiB;AAAA,2BACpB;AAAA,MACP,aAAa,KAAK;AAAA,MAClB,SAAS;AAAA,IACb,CAAC;AAAA,4BACW,KAAK,QAAQ;AAAA;AAAA,kBAEvB,KAAK,aAAa;AAAA;AAAA,cAEtB,KAAK,UAAU,IAAI,KAAK,qBAAqB;AAAA;AAAA,EAEvD;AAAA,EAEmB,OAAO,mBAA+C;AACrE,QAAI,kBAAkB,IAAI,SAAS,GAAG;AAClC,WAAK,UAAU;AAAA,IACnB;AACA,UAAM,OAAO,iBAAiB;AAAA,EAClC;AACJ;AA1EoB;AAAA,EADf,SAAS,EAAE,MAAM,OAAO,CAAC;AAAA,GARjB,WASO;AAGT;AAAA,EADN,SAAS,EAAE,MAAM,QAAQ,SAAS,KAAK,CAAC;AAAA,GAXhC,WAYF;AASK;AAAA,EADX,MAAM;AAAA,GApBE,WAqBG;",
  "names": []
}
