"use strict";
import "@spectrum-web-components/banner/sp-banner.js";
import { expect, fixture, html } from "@open-wc/testing";
describe("banner", () => {
  let testDiv;
  beforeEach(async () => {
    testDiv = await fixture(
      html`
                <div>
                    <sp-banner type="info">
                        <div slot="header">Info Text</div>
                        <div slot="content">Info Content</div>
                    </sp-banner>
                    <sp-banner type="warning">
                        <div slot="header">Warning Text</div>
                        <div slot="content">Warning Content</div>
                    </sp-banner>
                    <sp-banner type="error">
                        <div slot="header">Error Text</div>
                        <div slot="content">Error Content</div>
                    </sp-banner>
                    <sp-banner id="default-info">
                        <div slot="header">Header Text</div>
                        <div slot="content">Content</div>
                    </sp-banner>
                    <sp-banner corner>
                        <div slot="header">Corner Text</div>
                        <div slot="content">Corner Content</div>
                    </sp-banner>
                </div>
            `
    );
  });
  it("loads accessibly", async () => {
    await expect(testDiv).to.be.accessible();
  });
  it("loads info", () => {
    const el = testDiv.querySelector("sp-banner[type=info]");
    expect(el).to.not.equal(void 0);
    expect(el.type).to.equal("info");
    expect(el.corner).to.be.false;
    expect(el.textContent).to.include("Info Text");
    expect(el.textContent).to.include("Info Content");
  });
  it("loads warning", () => {
    const el = testDiv.querySelector("sp-banner[type=warning]");
    expect(el).to.not.equal(void 0);
    expect(el.type).to.equal("warning");
    expect(el.corner).to.be.false;
    expect(el.textContent).to.include("Warning Text");
    expect(el.textContent).to.include("Warning Content");
  });
  it("loads error", () => {
    const el = testDiv.querySelector("sp-banner[type=error]");
    expect(el).to.not.equal(void 0);
    expect(el.type).to.equal("error");
    expect(el.corner).to.be.false;
    expect(el.textContent).to.include("Error Text");
    expect(el.textContent).to.include("Error Content");
  });
  it("loads corner", () => {
    const el = testDiv.querySelector("sp-banner[corner]");
    expect(el).to.not.equal(void 0);
    expect(el.corner).to.be.true;
    expect(el.textContent).to.include("Corner Text");
    expect(el.textContent).to.include("Corner Content");
  });
  it("defaults type to info when none provided", () => {
    const el = testDiv.querySelector("sp-banner#default-info");
    expect(el).to.not.equal(void 0);
    expect(el.type).to.equal("info");
    expect(el.corner).to.be.false;
    expect(el.textContent).to.include("Header Text");
    expect(el.textContent).to.include("Content");
  });
});
//# sourceMappingURL=banner.test.js.map
