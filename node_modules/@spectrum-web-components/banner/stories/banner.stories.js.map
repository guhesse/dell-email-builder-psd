{
  "version": 3,
  "sources": ["banner.stories.ts"],
  "sourcesContent": ["/*\nCopyright 2020 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\nimport { spreadProps } from '../../../test/lit-helpers.js';\nimport { html, TemplateResult } from '@spectrum-web-components/base';\n\nimport '@spectrum-web-components/banner/sp-banner.js';\n\nexport default {\n    component: 'sp-banner',\n    title: 'Banner',\n    argTypes: {\n        header: {\n            name: 'header',\n            description: 'Primary message of the banner.',\n            type: { name: 'string', required: false },\n            table: {\n                type: { summary: 'string' },\n                defaultValue: { summary: '' },\n            },\n            control: 'text',\n        },\n        content: {\n            name: 'content',\n            description:\n                'Secondary message of the banner. Used to provide a description.',\n            type: { name: 'string', required: false },\n            table: {\n                type: { summary: 'string' },\n                defaultValue: { summary: '' },\n            },\n            control: 'text',\n        },\n        type: {\n            name: 'type',\n            description: 'Determines the style of the banner.',\n            table: {\n                type: { summary: 'string' },\n                defaultValue: { summary: 'info' },\n            },\n            control: {\n                type: 'inline-radio',\n                options: ['info', 'warning', 'error'],\n            },\n        },\n        inCorner: {\n            name: 'inCorner',\n            type: { name: 'boolean', required: false },\n            description:\n                'Determines if banner sets position at upper right corner or not.',\n            table: {\n                type: { summary: 'boolean' },\n                defaultValue: { summary: false },\n            },\n            control: {\n                type: 'boolean',\n            },\n        },\n    },\n    args: {\n        header: 'Header Text',\n        content: 'Content of the banner!',\n        inCorner: false,\n        type: 'info',\n    },\n};\n\ninterface StoryArgs {\n    header?: string;\n    content?: string;\n    type?: 'info' | 'warning' | 'error';\n    inCorner?: boolean;\n    [prop: string]: unknown;\n}\n\nconst Template = ({\n    header = 'Header text',\n    content = 'Content of the banner!',\n    type = 'info',\n    inCorner,\n}: StoryArgs = {}): TemplateResult => {\n    return html`\n        <div style=\"margin: -8px 0;\">\n            <div\n                style=\"width: 300px; height: 200px; background-color: #ccc; position: relative; margin: 20px;\"\n            >\n                <sp-banner type=\"${type}\" ?corner=${inCorner}>\n                    <div slot=\"header\">${header}</div>\n                    <div slot=\"content\">${content}</div>\n                </sp-banner>\n            </div>\n        </div>\n    `;\n};\n\nexport const Default = (args: StoryArgs): TemplateResult => Template(args);\n\nexport const bannerTypes = (): TemplateResult => {\n    return html`\n        <sp-banner type=\"info\">\n            <div slot=\"header\">Header Text</div>\n            <div slot=\"content\">Content of the banner!</div>\n        </sp-banner>\n        <sp-banner type=\"warning\">\n            <div slot=\"header\">Header Text</div>\n            <div slot=\"content\">Content of the banner!</div>\n        </sp-banner>\n        <sp-banner type=\"error\">\n            <div slot=\"header\">Header Text</div>\n            <div slot=\"content\">Content of the banner!</div>\n        </sp-banner>\n    `;\n};\n\nbannerTypes.storyName = 'Banner Types';\n\nexport const cornerPlacement = (args: StoryArgs): TemplateResult => {\n    return html`\n        <div style=\"margin: -8px 0;\">\n            <div\n                style=\"width: 300px; height: 200px; background-color: #ccc; position: relative; margin: 20px;\"\n            >\n                <sp-banner ${spreadProps(args)}>\n                    <div slot=\"header\">${args.header}</div>\n                    <div slot=\"content\">${args.content}</div>\n                </sp-banner>\n            </div>\n        </div>\n    `;\n};\ncornerPlacement.args = {\n    inCorner: true,\n    header: 'A corner banner!',\n    content: 'Content of the banner!',\n};\n\ncornerPlacement.storyName = 'Corner Placement';\n"],
  "mappings": ";AAWA,SAAS,mBAAmB;AAC5B,SAAS,YAA4B;AAErC,OAAO;AAEP,eAAe;AAAA,EACX,WAAW;AAAA,EACX,OAAO;AAAA,EACP,UAAU;AAAA,IACN,QAAQ;AAAA,MACJ,MAAM;AAAA,MACN,aAAa;AAAA,MACb,MAAM,EAAE,MAAM,UAAU,UAAU,MAAM;AAAA,MACxC,OAAO;AAAA,QACH,MAAM,EAAE,SAAS,SAAS;AAAA,QAC1B,cAAc,EAAE,SAAS,GAAG;AAAA,MAChC;AAAA,MACA,SAAS;AAAA,IACb;AAAA,IACA,SAAS;AAAA,MACL,MAAM;AAAA,MACN,aACI;AAAA,MACJ,MAAM,EAAE,MAAM,UAAU,UAAU,MAAM;AAAA,MACxC,OAAO;AAAA,QACH,MAAM,EAAE,SAAS,SAAS;AAAA,QAC1B,cAAc,EAAE,SAAS,GAAG;AAAA,MAChC;AAAA,MACA,SAAS;AAAA,IACb;AAAA,IACA,MAAM;AAAA,MACF,MAAM;AAAA,MACN,aAAa;AAAA,MACb,OAAO;AAAA,QACH,MAAM,EAAE,SAAS,SAAS;AAAA,QAC1B,cAAc,EAAE,SAAS,OAAO;AAAA,MACpC;AAAA,MACA,SAAS;AAAA,QACL,MAAM;AAAA,QACN,SAAS,CAAC,QAAQ,WAAW,OAAO;AAAA,MACxC;AAAA,IACJ;AAAA,IACA,UAAU;AAAA,MACN,MAAM;AAAA,MACN,MAAM,EAAE,MAAM,WAAW,UAAU,MAAM;AAAA,MACzC,aACI;AAAA,MACJ,OAAO;AAAA,QACH,MAAM,EAAE,SAAS,UAAU;AAAA,QAC3B,cAAc,EAAE,SAAS,MAAM;AAAA,MACnC;AAAA,MACA,SAAS;AAAA,QACL,MAAM;AAAA,MACV;AAAA,IACJ;AAAA,EACJ;AAAA,EACA,MAAM;AAAA,IACF,QAAQ;AAAA,IACR,SAAS;AAAA,IACT,UAAU;AAAA,IACV,MAAM;AAAA,EACV;AACJ;AAUA,MAAM,WAAW,CAAC;AAAA,EACd,SAAS;AAAA,EACT,UAAU;AAAA,EACV,OAAO;AAAA,EACP;AACJ,IAAe,CAAC,MAAsB;AAClC,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA,mCAKwB,iBAAiB;AAAA,yCACX;AAAA,0CACC;AAAA;AAAA;AAAA;AAAA;AAK1C;AAEO,aAAM,UAAU,CAAC,SAAoC,SAAS,IAAI;AAElE,aAAM,cAAc,MAAsB;AAC7C,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcX;AAEA,YAAY,YAAY;AAEjB,aAAM,kBAAkB,CAAC,SAAoC;AAChE,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA,6BAKkB,YAAY,IAAI;AAAA,yCACJ,KAAK;AAAA,0CACJ,KAAK;AAAA;AAAA;AAAA;AAAA;AAK/C;AACA,gBAAgB,OAAO;AAAA,EACnB,UAAU;AAAA,EACV,QAAQ;AAAA,EACR,SAAS;AACb;AAEA,gBAAgB,YAAY;",
  "names": []
}
