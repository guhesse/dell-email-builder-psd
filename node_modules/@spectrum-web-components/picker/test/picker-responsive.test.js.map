{
  "version": 3,
  "sources": ["picker-responsive.test.ts"],
  "sourcesContent": ["/*\nCopyright 2020 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\n\nimport '@spectrum-web-components/picker/sync/sp-picker.js';\nimport '@spectrum-web-components/field-label/sp-field-label.js';\nimport { Picker } from '@spectrum-web-components/picker';\nimport {\n    elementUpdated,\n    expect,\n    fixture,\n    html,\n    nextFrame,\n    oneEvent,\n} from '@open-wc/testing';\nimport { setViewport } from '@web/test-runner-commands';\n\ndescribe('Picker, responsive', () => {\n    let el: Picker;\n    const pickerFixture = async (): Promise<Picker> => {\n        const test = await fixture<HTMLDivElement>(\n            html`\n                <div>\n                    <sp-field-label for=\"picker\">\n                        Where do you live?\n                    </sp-field-label>\n                    <sp-picker\n                        id=\"picker\"\n                        style=\"width: 200px; --spectrum-alias-ui-icon-chevron-size-100: 10px;\"\n                    >\n                        <sp-menu-item>Deselect</sp-menu-item>\n                        <sp-menu-item value=\"option-2\">\n                            Select Inverse\n                        </sp-menu-item>\n                        <sp-menu-item>Feather...</sp-menu-item>\n                        <sp-menu-item>Select and Mask...</sp-menu-item>\n                        <sp-menu-divider></sp-menu-divider>\n                        <sp-menu-item>Save Selection</sp-menu-item>\n                        <sp-menu-item disabled>Make Work Path</sp-menu-item>\n                    </sp-picker>\n                </div>\n            `\n        );\n\n        return test.querySelector('sp-picker') as Picker;\n    };\n\n    describe('container', () => {\n        beforeEach(async () => {\n            el = await pickerFixture();\n            await elementUpdated(el);\n        });\n\n        xit('is a Tray in mobile', async () => {\n            /**\n             * While we can set the view port, but not `(hover: none) and (pointer: coarse)`\n             * which prevents us from testing this at unit time. Hopefully there will be\n             * a future version of Playwright and/or @web/test-runner that does allow this.\n             * See: https://github.com/microsoft/playwright/issues/11781\n             **/\n            await setViewport({ width: 360, height: 640 });\n            // Allow viewport update to propagate.\n            await nextFrame();\n\n            const opened = oneEvent(el, 'sp-opened');\n            el.open = true;\n            await opened;\n\n            const tray = el.shadowRoot.querySelector('sp-tray');\n\n            expect(tray).to.not.be.null;\n        });\n\n        it('is a Popover in desktop', async () => {\n            await setViewport({ width: 701, height: 640 });\n            // Allow viewport update to propagate.\n            await nextFrame();\n            await nextFrame();\n\n            const opened = oneEvent(el, 'sp-opened');\n            el.open = true;\n            await opened;\n\n            const popover = el.shadowRoot.querySelector('sp-popover');\n\n            expect(popover).to.not.be.null;\n        });\n    });\n});\n"],
  "mappings": ";AAYA,OAAO;AACP,OAAO;AAEP;AAAA,EACI;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,OACG;AACP,SAAS,mBAAmB;AAE5B,SAAS,sBAAsB,MAAM;AACjC,MAAI;AACJ,QAAM,gBAAgB,YAA6B;AAC/C,UAAM,OAAO,MAAM;AAAA,MACf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAqBJ;AAEA,WAAO,KAAK,cAAc,WAAW;AAAA,EACzC;AAEA,WAAS,aAAa,MAAM;AACxB,eAAW,YAAY;AACnB,WAAK,MAAM,cAAc;AACzB,YAAM,eAAe,EAAE;AAAA,IAC3B,CAAC;AAED,QAAI,uBAAuB,YAAY;AAOnC,YAAM,YAAY,EAAE,OAAO,KAAK,QAAQ,IAAI,CAAC;AAE7C,YAAM,UAAU;AAEhB,YAAM,SAAS,SAAS,IAAI,WAAW;AACvC,SAAG,OAAO;AACV,YAAM;AAEN,YAAM,OAAO,GAAG,WAAW,cAAc,SAAS;AAElD,aAAO,IAAI,EAAE,GAAG,IAAI,GAAG;AAAA,IAC3B,CAAC;AAED,OAAG,2BAA2B,YAAY;AACtC,YAAM,YAAY,EAAE,OAAO,KAAK,QAAQ,IAAI,CAAC;AAE7C,YAAM,UAAU;AAChB,YAAM,UAAU;AAEhB,YAAM,SAAS,SAAS,IAAI,WAAW;AACvC,SAAG,OAAO;AACV,YAAM;AAEN,YAAM,UAAU,GAAG,WAAW,cAAc,YAAY;AAExD,aAAO,OAAO,EAAE,GAAG,IAAI,GAAG;AAAA,IAC9B,CAAC;AAAA,EACL,CAAC;AACL,CAAC;",
  "names": []
}
