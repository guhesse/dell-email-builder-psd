"use strict";import{SpectrumElement as E}from"@spectrum-web-components/base";import{reparentChildren as T}from"@spectrum-web-components/shared/src/reparent-children.js";import{OverlayTimer as P}from"./overlay-timer.js";export const overlayTimer=new P,noop=()=>{};export class BeforetoggleClosedEvent extends Event{constructor(){super("beforetoggle",{bubbles:!1,composed:!1});this.currentState="open";this.newState="closed"}}export class BeforetoggleOpenEvent extends Event{constructor(){super("beforetoggle",{bubbles:!1,composed:!1});this.currentState="closed";this.newState="open"}}export const guaranteedAllTransitionend=(o,d,t)=>{const a=new AbortController,n=new Map,c=()=>{a.abort(),t()};let u,s;const e=requestAnimationFrame(()=>{u=requestAnimationFrame(()=>{s=requestAnimationFrame(()=>{c()})})}),m=r=>{r.target===o&&(n.set(r.propertyName,n.get(r.propertyName)-1),n.get(r.propertyName)||n.delete(r.propertyName),n.size===0&&c())},y=r=>{r.target===o&&(n.has(r.propertyName)||n.set(r.propertyName,0),n.set(r.propertyName,n.get(r.propertyName)+1),cancelAnimationFrame(e),cancelAnimationFrame(u),cancelAnimationFrame(s))};o.addEventListener("transitionrun",y,{signal:a.signal}),o.addEventListener("transitionend",m,{signal:a.signal}),o.addEventListener("transitioncancel",m,{signal:a.signal}),d()};export function nextFrame(){return new Promise(o=>requestAnimationFrame(()=>o()))}export function forcePaint(){document.body.offsetHeight}export class AbstractOverlay extends E{constructor(){super(...arguments);this.dispose=noop;this.offset=6;this.willPreventClose=!1}async applyFocus(t,a){}async ensureOnDOM(t){}async makeTransition(t){return null}async manageDelay(t){}async manageDialogOpen(){}async managePopoverOpen(){}managePosition(){}get open(){return!1}set open(t){}get state(){return"closed"}set state(t){}manuallyKeepOpen(){}static update(){const t=new CustomEvent("sp-update-overlays",{bubbles:!0,composed:!0,cancelable:!0});document.dispatchEvent(t)}static async open(t,a,n,c){var g,b,f,O;await import("@spectrum-web-components/overlay/sp-overlay.js");const u=arguments.length===2,s=n||t,e=new this;let m=!1;e.dispose=()=>{e.addEventListener("sp-closed",()=>{m||(y(),m=!0),requestAnimationFrame(()=>{e.remove()})}),e.open=!1,e.dispose=noop};const y=T([s],e,{position:"beforeend",prepareCallback:l=>{const v=l.slot;return l.removeAttribute("slot"),()=>{l.slot=v}}});if(!u&&s&&c){const l=t,v=a,p=c;return e.delayed=p.delayed||s.hasAttribute("delayed"),e.receivesFocus=(g=p.receivesFocus)!=null?g:"auto",e.triggerElement=p.virtualTrigger||l,e.type=v==="modal"?"modal":v==="hover"?"hint":"auto",e.offset=(b=p.offset)!=null?b:6,e.placement=p.placement,e.willPreventClose=!!p.notImmediatelyClosable,l.insertAdjacentElement("afterend",e),await e.updateComplete,e.open=!0,e.dispose}const i=a;return e.append(s),e.delayed=i.delayed||s.hasAttribute("delayed"),e.receivesFocus=(f=i.receivesFocus)!=null?f:"auto",e.triggerElement=i.trigger||null,e.type=i.type||"modal",e.offset=(O=i.offset)!=null?O:6,e.placement=i.placement,e.willPreventClose=!!i.notImmediatelyClosable,e.updateComplete.then(()=>{e.open=!0}),e}}
//# sourceMappingURL=AbstractOverlay.js.map
