"use strict";var h=Object.defineProperty;var m=Object.getOwnPropertyDescriptor;var d=(n,s,e,t)=>{for(var r=t>1?void 0:t?m(s,e):s,a=n.length-1,l;a>=0;a--)(l=n[a])&&(r=(t?l(s,e,r):l(r))||r);return t&&r&&h(s,e,r),r};import{html as o}from"@spectrum-web-components/base";import{queryAssignedNodes as p,state as u}from"@spectrum-web-components/base/src/decorators.js";import{Menu as c}from"./Menu.js";import"../sp-menu.js";import b from"./menu-group.css.js";const i=class extends c{constructor(){super();i.instances+=1,this.headerId=`sp-menu-group-label-${i.instances}`}static get styles(){return[...super.styles,b]}get ownRole(){switch(this.selects){case"multiple":case"single":case"inherit":return"group";default:return"menu"}}updateLabel(){const e=this.headerElements.length?this.headerElements[0]:void 0;if(e!==this.headerElement)if(this.headerElement&&this.headerElement.id===this.headerId&&this.headerElement.removeAttribute("id"),e){const t=e.id||this.headerId;e.id||(e.id=t),this.setAttribute("aria-labelledby",t)}else this.removeAttribute("aria-labelledby");this.headerElement=e}render(){return o`
            <span
                class="header"
                aria-hidden="true"
                ?hidden=${!this.headerElement}
            >
                <slot name="header" @slotchange=${this.updateLabel}></slot>
            </span>
            <sp-menu role="none">
                <slot></slot>
            </sp-menu>
        `}};export let MenuGroup=i;MenuGroup.instances=0,d([p("header",!0)],MenuGroup.prototype,"headerElements",2),d([u()],MenuGroup.prototype,"headerElement",2);
//# sourceMappingURL=MenuGroup.js.map
