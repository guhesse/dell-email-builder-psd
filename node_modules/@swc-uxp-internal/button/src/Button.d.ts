import { CSSResultArray, PropertyValues } from '@spectrum-web-components/base';
import { StyledButton } from './StyledButton.js';
export declare type DeprecatedButtonVariants = 'cta' | 'overBackground';
export declare type ButtonStatics = 'white' | 'black';
export declare type ButtonVariants = 'accent' | 'primary' | 'secondary' | 'negative' | ButtonStatics | DeprecatedButtonVariants;
export declare const VALID_VARIANTS: string[];
export declare type ButtonTreatments = 'fill' | 'outline';
declare const Button_base: typeof StyledButton & {
    new (...args: any[]): import("@spectrum-web-components/base").SizedElementInterface;
    prototype: import("@spectrum-web-components/base").SizedElementInterface;
};
/**
 * @element sp-button
 *
 * @slot - text label of the Button
 * @slot icon - The icon to use for Button
 */
export declare class Button extends Button_base {
    static get styles(): CSSResultArray;
    /**
     * The visual variant to apply to this button.
     */
    get variant(): ButtonVariants;
    set variant(variant: ButtonVariants);
    private _variant;
    /**
     * The visual variant to apply to this button.
     */
    treatment: ButtonTreatments;
    /**
     * Style this button to be less obvious
     */
    set quiet(quiet: boolean);
    protected firstUpdated(changes: PropertyValues<this>): void;
}
export {};
