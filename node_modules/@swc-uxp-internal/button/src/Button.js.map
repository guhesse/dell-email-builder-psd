{
  "version": 3,
  "sources": ["Button.ts"],
  "sourcesContent": ["/*\nCopyright 2020 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\n\nimport {\n    CSSResultArray,\n    PropertyValues,\n    SizedMixin,\n} from '@spectrum-web-components/base';\nimport { property } from '@spectrum-web-components/base/src/decorators.js';\nimport { StyledButton } from './StyledButton.js';\nimport buttonStyles from './button.css.js';\n\nexport type DeprecatedButtonVariants = 'cta' | 'overBackground';\nexport type ButtonStatics = 'white' | 'black';\nexport type ButtonVariants =\n    | 'accent'\n    | 'primary'\n    | 'secondary'\n    | 'negative'\n    | ButtonStatics\n    | DeprecatedButtonVariants;\nexport const VALID_VARIANTS = [\n    'accent',\n    'primary',\n    'secondary',\n    'negative',\n    'white',\n    'black',\n];\n\nexport type ButtonTreatments = 'fill' | 'outline';\n\n/**\n * @element sp-button\n *\n * @slot - text label of the Button\n * @slot icon - The icon to use for Button\n */\nexport class Button extends SizedMixin(StyledButton) {\n    public static override get styles(): CSSResultArray {\n        return [...super.styles, buttonStyles];\n    }\n\n    /**\n     * The visual variant to apply to this button.\n     */\n    @property()\n    public get variant(): ButtonVariants {\n        return this._variant;\n    }\n    public set variant(variant: ButtonVariants) {\n        if (variant === this.variant) return;\n\n        this.requestUpdate('variant', this.variant);\n        switch (variant) {\n            case 'cta':\n                this._variant = 'accent';\n                break;\n            case 'overBackground':\n                this._variant = 'white';\n                this.treatment = 'outline';\n                break;\n            default:\n                if (!VALID_VARIANTS.includes(variant)) {\n                    this._variant = 'accent';\n                } else {\n                    this._variant = variant;\n                }\n                break;\n        }\n        this.setAttribute('variant', this.variant);\n    }\n    private _variant: ButtonVariants = 'accent';\n\n    /**\n     * The visual variant to apply to this button.\n     */\n    @property({ reflect: true })\n    public treatment: ButtonTreatments = 'fill';\n\n    /**\n     * Style this button to be less obvious\n     */\n    @property({ type: Boolean })\n    public set quiet(quiet: boolean) {\n        this.treatment = quiet ? 'outline' : 'fill';\n    }\n\n    protected override firstUpdated(changes: PropertyValues<this>): void {\n        super.firstUpdated(changes);\n        if (!this.hasAttribute('variant')) {\n            this.setAttribute('variant', this.variant);\n        }\n    }\n}\n"],
  "mappings": "qNAYA,OAGI,cAAAA,MACG,gCACP,OAAS,YAAAC,MAAgB,kDACzB,OAAS,gBAAAC,MAAoB,oBAC7B,OAAOC,MAAkB,kBAWlB,aAAM,eAAiB,CAC1B,SACA,UACA,YACA,WACA,QACA,OACJ,EAUO,aAAM,eAAeH,EAAWE,CAAY,CAAE,CAA9C,kCAkCH,KAAQ,SAA2B,SAMnC,KAAO,UAA8B,OAvCrC,WAA2B,QAAyB,CAChD,MAAO,CAAC,GAAG,MAAM,OAAQC,CAAY,CACzC,CAMA,IAAW,SAA0B,CACjC,OAAO,KAAK,QAChB,CACA,IAAW,QAAQC,EAAyB,CACxC,GAAIA,IAAY,KAAK,QAGrB,QADA,KAAK,cAAc,UAAW,KAAK,OAAO,EAClCA,EAAS,CACb,IAAK,MACD,KAAK,SAAW,SAChB,MACJ,IAAK,iBACD,KAAK,SAAW,QAChB,KAAK,UAAY,UACjB,MACJ,QACS,eAAe,SAASA,CAAO,EAGhC,KAAK,SAAWA,EAFhB,KAAK,SAAW,SAIpB,KACR,CACA,KAAK,aAAa,UAAW,KAAK,OAAO,EAC7C,CAaA,IAAW,MAAMC,EAAgB,CAC7B,KAAK,UAAYA,EAAQ,UAAY,MACzC,CAEmB,aAAaC,EAAqC,CACjE,MAAM,aAAaA,CAAO,EACrB,KAAK,aAAa,SAAS,GAC5B,KAAK,aAAa,UAAW,KAAK,OAAO,CAEjD,CACJ,CA/CeC,EAAA,CADVN,EAAS,GARD,OASE,uBA+BJM,EAAA,CADNN,EAAS,CAAE,QAAS,EAAK,CAAC,GAvClB,OAwCF,yBAMIM,EAAA,CADVN,EAAS,CAAE,KAAM,OAAQ,CAAC,GA7ClB,OA8CE",
  "names": ["SizedMixin", "property", "StyledButton", "buttonStyles", "variant", "quiet", "changes", "__decorateClass"]
}
